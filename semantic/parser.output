Grammar

    0 $accept: program $end

    1 program: gvar_all_def func_def prog_content
    2        | gvar_all_def func_def
    3        | func_def prog_content
    4        | func_def

    5 prog_content: prog_content gvar_def
    6             | prog_content func_def
    7             | prog_content func_decl
    8             | gvar_def
    9             | func_def
   10             | func_decl

   11 gvar_all_def: gvar_all_def gvar_def
   12             | gvar_all_def func_decl
   13             | gvar_def
   14             | func_decl

   15 gvar_def: basic gvar_list ID ';'
   16         | basic gvar_list ID '=' expr ';'
   17         | basic ID ';'
   18         | basic ID '=' expr ';'
   19         | CONST basic gconst_list ID '=' liter_const ';'
   20         | CONST basic ID '=' liter_const ';'

   21 gvar_list: gvar_list ID ','
   22          | gvar_list ID '=' expr ','
   23          | ID ','
   24          | ID '=' expr ','

   25 gconst_list: gconst_list ID '=' liter_const ','
   26            | ID '=' liter_const ','

   27 var_def: basic var_list ID ';'
   28        | basic var_list ID '=' expr ';'
   29        | basic ID ';'
   30        | basic ID '=' expr ';'
   31        | CONST basic const_list ID '=' liter_const ';'
   32        | CONST basic ID '=' liter_const ';'

   33 $@1: %empty

   34 $@2: %empty

   35 $@3: %empty

   36 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'

   37 $@4: %empty

   38 $@5: %empty

   39 $@6: %empty

   40 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'

   41 $@7: %empty

   42 $@8: %empty

   43 $@9: %empty

   44 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'

   45 $@10: %empty

   46 $@11: %empty

   47 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'

   48 $@12: %empty

   49 $@13: %empty

   50 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}'

   51 $@14: %empty

   52 $@15: %empty

   53 func_def: void_reduce ID '(' ')' $@14 '{' $@15 compound_in_argu_func '}'

   54 $@16: %empty

   55 compound: '{' $@16 compound_list '}'

   56 $@17: %empty

   57 compound: '{' $@17 '}'

   58 statement: compound
   59          | simple_stat
   60          | condition
   61          | while_stat
   62          | for_stat
   63          | jump_stat
   64          | expr ';'

   65 compound_in_argu_func: compound_list
   66                      | %empty

   67 compound_list: compound_list var_def
   68              | compound_list statement
   69              | statement
   70              | var_def

   71 $@18: %empty

   72 func_decl: basic ID '(' argu_list argu ')' $@18 ';'

   73 $@19: %empty

   74 func_decl: basic ID '(' argu ')' $@19 ';'

   75 $@20: %empty

   76 func_decl: basic ID '(' ')' $@20 ';'

   77 $@21: %empty

   78 func_decl: void_reduce ID '(' argu_list argu ')' $@21 ';'

   79 $@22: %empty

   80 func_decl: void_reduce ID '(' argu ')' $@22 ';'

   81 $@23: %empty

   82 func_decl: void_reduce ID '(' ')' $@23 ';'

   83 argu_list: argu_list argu ','
   84          | argu ','

   85 argu: basic ID

   86 basic: BASIC_TYPE

   87 void_reduce: VOID

   88 liter_const: int_value
   89            | '-' int_value
   90            | float_value
   91            | '-' float_value
   92            | bool_value
   93            | string_value

   94 value_type: int_value
   95           | float_value
   96           | bool_value
   97           | string_value

   98 int_value: INT_CONST

   99 float_value: FLOAT_CONST

  100 bool_value: BOOL_CONST

  101 string_value: STRING_CONST

  102 var_list: var_list ID ','
  103         | var_list ID '=' expr ','
  104         | ID ','
  105         | ID '=' expr ','

  106 const_list: const_list ID '=' liter_const ','
  107           | ID '=' liter_const ','

  108 expr: expr '*' expr
  109     | expr '/' expr
  110     | expr '+' expr
  111     | expr '-' expr
  112     | expr '%' expr
  113     | expr '<' expr
  114     | expr LE expr
  115     | expr '>' expr
  116     | expr GE expr
  117     | expr EQ expr
  118     | expr NE expr
  119     | '(' expr ')'
  120     | '-' expr
  121     | expr AND expr
  122     | expr OR expr
  123     | '!' expr
  124     | value_type
  125     | ID
  126     | func_invo

  127 func_invo: ID '(' expr_list expr ')'
  128          | ID '(' expr ')'
  129          | ID '(' ')'

  130 expr_list: expr_list expr ','
  131          | expr ','

  132 simple_stat: var_ref '=' expr ';'
  133            | PRINT expr ';'
  134            | READ var_ref ';'

  135 var_ref: ID

  136 condition: IF '(' bool_expr ')' compound
  137          | IF '(' bool_expr ')' compound ELSE compound

  138 bool_expr: expr

  139 $@24: %empty

  140 while_stat: WHILE '(' bool_expr ')' $@24 compound

  141 $@25: %empty

  142 while_stat: DO $@25 compound WHILE '(' bool_expr ')' ';'

  143 $@26: %empty

  144 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' $@26 compound

  145 $@27: %empty

  146 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' $@27 compound

  147 init_expr: init_expr_list var_ref '=' expr
  148          | init_expr_list func_invo
  149          | func_invo
  150          | var_ref '=' expr
  151          | %empty

  152 init_expr_list: init_expr_list var_ref '=' expr ','
  153               | init_expr_list func_invo ','
  154               | func_invo ','
  155               | var_ref '=' expr ','

  156 incr_expr: incr_expr_list var_ref '=' expr ','
  157          | incr_expr_list func_invo
  158          | var_ref '=' expr
  159          | func_invo
  160          | %empty

  161 incr_expr_list: incr_expr_list var_ref '=' expr ','
  162               | incr_expr_list func_invo ','
  163               | var_ref '=' expr ','
  164               | func_invo

  165 jump_stat: RETURN ';'
  166          | RETURN expr ';'
  167          | BREAK ';'
  168          | CONTINUE ';'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 123
'%' (37) 112
'(' (40) 36 40 44 47 50 53 72 74 76 78 80 82 119 127 128 129 136 137
    140 142 144 146
')' (41) 36 40 44 47 50 53 72 74 76 78 80 82 119 127 128 129 136 137
    140 142 144 146
'*' (42) 108
'+' (43) 110
',' (44) 21 22 23 24 25 26 83 84 102 103 104 105 106 107 130 131 152
    153 154 155 156 161 162 163
'-' (45) 89 91 111 120
'/' (47) 109
';' (59) 15 16 17 18 19 20 27 28 29 30 31 32 64 72 74 76 78 80 82 132
    133 134 142 144 146 165 166 167 168
'<' (60) 113
'=' (61) 16 18 19 20 22 24 25 26 28 30 31 32 103 105 106 107 132 147
    150 152 155 156 158 161 163
'>' (62) 115
'{' (123) 36 40 44 47 50 53 55 57
'}' (125) 36 40 44 47 50 53 55 57
error (256)
VOID (258) 87
BASIC_TYPE (259) 86
ID (260) 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 36 40
    44 47 50 53 72 74 76 78 80 82 85 102 103 104 105 106 107 125 127
    128 129 135
INT_CONST (261) 98
FLOAT_CONST (262) 99
BOOL_CONST (263) 100
STRING_CONST (264) 101
READ (265) 134
PRINT (266) 133
IF (267) 136 137
ELSE (268) 137
DO (269) 142
WHILE (270) 140 142
FOR (271) 144 146
CONTINUE (272) 168
BREAK (273) 167
RETURN (274) 165 166
CONST (275) 19 20 31 32
OR (276) 122
AND (277) 121
LE (278) 114
EQ (279) 117
GE (280) 116
NE (281) 118
UNOT (282)
UMINUS (283)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1 2 3 4, on right: 0
prog_content (46)
    on left: 5 6 7 8 9 10, on right: 1 3 5 6 7
gvar_all_def (47)
    on left: 11 12 13 14, on right: 1 2 11 12
gvar_def (48)
    on left: 15 16 17 18 19 20, on right: 5 8 11 13
gvar_list (49)
    on left: 21 22 23 24, on right: 15 16 21 22
gconst_list (50)
    on left: 25 26, on right: 19 25
var_def (51)
    on left: 27 28 29 30 31 32, on right: 67 70
func_def (52)
    on left: 36 40 44 47 50 53, on right: 1 2 3 4 6 9
$@1 (53)
    on left: 33, on right: 36
$@2 (54)
    on left: 34, on right: 36
$@3 (55)
    on left: 35, on right: 36
$@4 (56)
    on left: 37, on right: 40
$@5 (57)
    on left: 38, on right: 40
$@6 (58)
    on left: 39, on right: 40
$@7 (59)
    on left: 41, on right: 44
$@8 (60)
    on left: 42, on right: 44
$@9 (61)
    on left: 43, on right: 44
$@10 (62)
    on left: 45, on right: 47
$@11 (63)
    on left: 46, on right: 47
$@12 (64)
    on left: 48, on right: 50
$@13 (65)
    on left: 49, on right: 50
$@14 (66)
    on left: 51, on right: 53
$@15 (67)
    on left: 52, on right: 53
compound (68)
    on left: 55 57, on right: 58 136 137 140 142 144 146
$@16 (69)
    on left: 54, on right: 55
$@17 (70)
    on left: 56, on right: 57
statement (71)
    on left: 58 59 60 61 62 63 64, on right: 68 69
compound_in_argu_func (72)
    on left: 65 66, on right: 36 40 44 47 50 53
compound_list (73)
    on left: 67 68 69 70, on right: 55 65 67 68
func_decl (74)
    on left: 72 74 76 78 80 82, on right: 7 10 12 14
$@18 (75)
    on left: 71, on right: 72
$@19 (76)
    on left: 73, on right: 74
$@20 (77)
    on left: 75, on right: 76
$@21 (78)
    on left: 77, on right: 78
$@22 (79)
    on left: 79, on right: 80
$@23 (80)
    on left: 81, on right: 82
argu_list (81)
    on left: 83 84, on right: 36 47 72 78 83
argu (82)
    on left: 85, on right: 36 40 47 50 72 74 78 80 83 84
basic (83)
    on left: 86, on right: 15 16 17 18 19 20 27 28 29 30 31 32 36 40
    44 72 74 76 85
void_reduce (84)
    on left: 87, on right: 47 50 53 78 80 82
liter_const (85)
    on left: 88 89 90 91 92 93, on right: 19 20 25 26 31 32 106 107
value_type (86)
    on left: 94 95 96 97, on right: 124
int_value (87)
    on left: 98, on right: 88 89 94
float_value (88)
    on left: 99, on right: 90 91 95
bool_value (89)
    on left: 100, on right: 92 96
string_value (90)
    on left: 101, on right: 93 97
var_list (91)
    on left: 102 103 104 105, on right: 27 28 102 103
const_list (92)
    on left: 106 107, on right: 31 106
expr (93)
    on left: 108 109 110 111 112 113 114 115 116 117 118 119 120 121
    122 123 124 125 126, on right: 16 18 22 24 28 30 64 103 105 108
    109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 127
    128 130 131 132 133 138 147 150 152 155 156 158 161 163 166
func_invo (94)
    on left: 127 128 129, on right: 126 148 149 153 154 157 159 162
    164
expr_list (95)
    on left: 130 131, on right: 127 130
simple_stat (96)
    on left: 132 133 134, on right: 59
var_ref (97)
    on left: 135, on right: 132 134 147 150 152 155 156 158 161 163
condition (98)
    on left: 136 137, on right: 60
bool_expr (99)
    on left: 138, on right: 136 137 140 142 144
while_stat (100)
    on left: 140 142, on right: 61
$@24 (101)
    on left: 139, on right: 140
$@25 (102)
    on left: 141, on right: 142
for_stat (103)
    on left: 144 146, on right: 62
$@26 (104)
    on left: 143, on right: 144
$@27 (105)
    on left: 145, on right: 146
init_expr (106)
    on left: 147 148 149 150 151, on right: 144 146
init_expr_list (107)
    on left: 152 153 154 155, on right: 147 148 152 153
incr_expr (108)
    on left: 156 157 158 159 160, on right: 144 146
incr_expr_list (109)
    on left: 161 162 163 164, on right: 156 157 161 162
jump_stat (110)
    on left: 165 166 167 168, on right: 63


State 0

    0 $accept: . program $end

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    program       go to state 4
    gvar_all_def  go to state 5
    gvar_def      go to state 6
    func_def      go to state 7
    func_decl     go to state 8
    basic         go to state 9
    void_reduce   go to state 10


State 1

   87 void_reduce: VOID .

    $default  reduce using rule 87 (void_reduce)


State 2

   86 basic: BASIC_TYPE .

    $default  reduce using rule 86 (basic)


State 3

   19 gvar_def: CONST . basic gconst_list ID '=' liter_const ';'
   20         | CONST . basic ID '=' liter_const ';'

    BASIC_TYPE  shift, and go to state 2

    basic  go to state 11


State 4

    0 $accept: program . $end

    $end  shift, and go to state 12


State 5

    1 program: gvar_all_def . func_def prog_content
    2        | gvar_all_def . func_def
   11 gvar_all_def: gvar_all_def . gvar_def
   12             | gvar_all_def . func_decl

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    gvar_def     go to state 13
    func_def     go to state 14
    func_decl    go to state 15
    basic        go to state 9
    void_reduce  go to state 10


State 6

   13 gvar_all_def: gvar_def .

    $default  reduce using rule 13 (gvar_all_def)


State 7

    3 program: func_def . prog_content
    4        | func_def .

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 4 (program)

    prog_content  go to state 16
    gvar_def      go to state 17
    func_def      go to state 18
    func_decl     go to state 19
    basic         go to state 9
    void_reduce   go to state 10


State 8

   14 gvar_all_def: func_decl .

    $default  reduce using rule 14 (gvar_all_def)


State 9

   15 gvar_def: basic . gvar_list ID ';'
   16         | basic . gvar_list ID '=' expr ';'
   17         | basic . ID ';'
   18         | basic . ID '=' expr ';'
   36 func_def: basic . ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   40         | basic . ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   44         | basic . ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'
   72 func_decl: basic . ID '(' argu_list argu ')' $@18 ';'
   74          | basic . ID '(' argu ')' $@19 ';'
   76          | basic . ID '(' ')' $@20 ';'

    ID  shift, and go to state 20

    gvar_list  go to state 21


State 10

   47 func_def: void_reduce . ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   50         | void_reduce . ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}'
   53         | void_reduce . ID '(' ')' $@14 '{' $@15 compound_in_argu_func '}'
   78 func_decl: void_reduce . ID '(' argu_list argu ')' $@21 ';'
   80          | void_reduce . ID '(' argu ')' $@22 ';'
   82          | void_reduce . ID '(' ')' $@23 ';'

    ID  shift, and go to state 22


State 11

   19 gvar_def: CONST basic . gconst_list ID '=' liter_const ';'
   20         | CONST basic . ID '=' liter_const ';'

    ID  shift, and go to state 23

    gconst_list  go to state 24


State 12

    0 $accept: program $end .

    $default  accept


State 13

   11 gvar_all_def: gvar_all_def gvar_def .

    $default  reduce using rule 11 (gvar_all_def)


State 14

    1 program: gvar_all_def func_def . prog_content
    2        | gvar_all_def func_def .

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 2 (program)

    prog_content  go to state 25
    gvar_def      go to state 17
    func_def      go to state 18
    func_decl     go to state 19
    basic         go to state 9
    void_reduce   go to state 10


State 15

   12 gvar_all_def: gvar_all_def func_decl .

    $default  reduce using rule 12 (gvar_all_def)


State 16

    3 program: func_def prog_content .
    5 prog_content: prog_content . gvar_def
    6             | prog_content . func_def
    7             | prog_content . func_decl

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 3 (program)

    gvar_def     go to state 26
    func_def     go to state 27
    func_decl    go to state 28
    basic        go to state 9
    void_reduce  go to state 10


State 17

    8 prog_content: gvar_def .

    $default  reduce using rule 8 (prog_content)


State 18

    9 prog_content: func_def .

    $default  reduce using rule 9 (prog_content)


State 19

   10 prog_content: func_decl .

    $default  reduce using rule 10 (prog_content)


State 20

   17 gvar_def: basic ID . ';'
   18         | basic ID . '=' expr ';'
   23 gvar_list: ID . ','
   24          | ID . '=' expr ','
   36 func_def: basic ID . '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   40         | basic ID . '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   44         | basic ID . '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'
   72 func_decl: basic ID . '(' argu_list argu ')' $@18 ';'
   74          | basic ID . '(' argu ')' $@19 ';'
   76          | basic ID . '(' ')' $@20 ';'

    ';'  shift, and go to state 29
    '='  shift, and go to state 30
    ','  shift, and go to state 31
    '('  shift, and go to state 32


State 21

   15 gvar_def: basic gvar_list . ID ';'
   16         | basic gvar_list . ID '=' expr ';'
   21 gvar_list: gvar_list . ID ','
   22          | gvar_list . ID '=' expr ','

    ID  shift, and go to state 33


State 22

   47 func_def: void_reduce ID . '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   50         | void_reduce ID . '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}'
   53         | void_reduce ID . '(' ')' $@14 '{' $@15 compound_in_argu_func '}'
   78 func_decl: void_reduce ID . '(' argu_list argu ')' $@21 ';'
   80          | void_reduce ID . '(' argu ')' $@22 ';'
   82          | void_reduce ID . '(' ')' $@23 ';'

    '('  shift, and go to state 34


State 23

   20 gvar_def: CONST basic ID . '=' liter_const ';'
   26 gconst_list: ID . '=' liter_const ','

    '='  shift, and go to state 35


State 24

   19 gvar_def: CONST basic gconst_list . ID '=' liter_const ';'
   25 gconst_list: gconst_list . ID '=' liter_const ','

    ID  shift, and go to state 36


State 25

    1 program: gvar_all_def func_def prog_content .
    5 prog_content: prog_content . gvar_def
    6             | prog_content . func_def
    7             | prog_content . func_decl

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 1 (program)

    gvar_def     go to state 26
    func_def     go to state 27
    func_decl    go to state 28
    basic        go to state 9
    void_reduce  go to state 10


State 26

    5 prog_content: prog_content gvar_def .

    $default  reduce using rule 5 (prog_content)


State 27

    6 prog_content: prog_content func_def .

    $default  reduce using rule 6 (prog_content)


State 28

    7 prog_content: prog_content func_decl .

    $default  reduce using rule 7 (prog_content)


State 29

   17 gvar_def: basic ID ';' .

    $default  reduce using rule 17 (gvar_def)


State 30

   18 gvar_def: basic ID '=' . expr ';'
   24 gvar_list: ID '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 50
    func_invo     go to state 51


State 31

   23 gvar_list: ID ',' .

    $default  reduce using rule 23 (gvar_list)


State 32

   36 func_def: basic ID '(' . argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   40         | basic ID '(' . argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   44         | basic ID '(' . ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'
   72 func_decl: basic ID '(' . argu_list argu ')' $@18 ';'
   74          | basic ID '(' . argu ')' $@19 ';'
   76          | basic ID '(' . ')' $@20 ';'

    BASIC_TYPE  shift, and go to state 2
    ')'         shift, and go to state 52

    argu_list  go to state 53
    argu       go to state 54
    basic      go to state 55


State 33

   15 gvar_def: basic gvar_list ID . ';'
   16         | basic gvar_list ID . '=' expr ';'
   21 gvar_list: gvar_list ID . ','
   22          | gvar_list ID . '=' expr ','

    ';'  shift, and go to state 56
    '='  shift, and go to state 57
    ','  shift, and go to state 58


State 34

   47 func_def: void_reduce ID '(' . argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   50         | void_reduce ID '(' . argu ')' $@12 '{' $@13 compound_in_argu_func '}'
   53         | void_reduce ID '(' . ')' $@14 '{' $@15 compound_in_argu_func '}'
   78 func_decl: void_reduce ID '(' . argu_list argu ')' $@21 ';'
   80          | void_reduce ID '(' . argu ')' $@22 ';'
   82          | void_reduce ID '(' . ')' $@23 ';'

    BASIC_TYPE  shift, and go to state 2
    ')'         shift, and go to state 59

    argu_list  go to state 60
    argu       go to state 61
    basic      go to state 55


State 35

   20 gvar_def: CONST basic ID '=' . liter_const ';'
   26 gconst_list: ID '=' . liter_const ','

    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 62

    liter_const   go to state 63
    int_value     go to state 64
    float_value   go to state 65
    bool_value    go to state 66
    string_value  go to state 67


State 36

   19 gvar_def: CONST basic gconst_list ID . '=' liter_const ';'
   25 gconst_list: gconst_list ID . '=' liter_const ','

    '='  shift, and go to state 68


State 37

  125 expr: ID .
  127 func_invo: ID . '(' expr_list expr ')'
  128          | ID . '(' expr ')'
  129          | ID . '(' ')'

    '('  shift, and go to state 69

    $default  reduce using rule 125 (expr)


State 38

   98 int_value: INT_CONST .

    $default  reduce using rule 98 (int_value)


State 39

   99 float_value: FLOAT_CONST .

    $default  reduce using rule 99 (float_value)


State 40

  100 bool_value: BOOL_CONST .

    $default  reduce using rule 100 (bool_value)


State 41

  101 string_value: STRING_CONST .

    $default  reduce using rule 101 (string_value)


State 42

  120 expr: '-' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 70
    func_invo     go to state 51


State 43

  119 expr: '(' . expr ')'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 71
    func_invo     go to state 51


State 44

  123 expr: '!' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 72
    func_invo     go to state 51


State 45

  124 expr: value_type .

    $default  reduce using rule 124 (expr)


State 46

   94 value_type: int_value .

    $default  reduce using rule 94 (value_type)


State 47

   95 value_type: float_value .

    $default  reduce using rule 95 (value_type)


State 48

   96 value_type: bool_value .

    $default  reduce using rule 96 (value_type)


State 49

   97 value_type: string_value .

    $default  reduce using rule 97 (value_type)


State 50

   18 gvar_def: basic ID '=' expr . ';'
   24 gvar_list: ID '=' expr . ','
  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 86
    ','  shift, and go to state 87


State 51

  126 expr: func_invo .

    $default  reduce using rule 126 (expr)


State 52

   44 func_def: basic ID '(' ')' . $@7 '{' $@8 compound_in_argu_func $@9 '}'
   76 func_decl: basic ID '(' ')' . $@20 ';'

    ';'       reduce using rule 75 ($@20)
    $default  reduce using rule 41 ($@7)

    $@7   go to state 88
    $@20  go to state 89


State 53

   36 func_def: basic ID '(' argu_list . argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   72 func_decl: basic ID '(' argu_list . argu ')' $@18 ';'
   83 argu_list: argu_list . argu ','

    BASIC_TYPE  shift, and go to state 2

    argu   go to state 90
    basic  go to state 55


State 54

   40 func_def: basic ID '(' argu . ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   74 func_decl: basic ID '(' argu . ')' $@19 ';'
   84 argu_list: argu . ','

    ','  shift, and go to state 91
    ')'  shift, and go to state 92


State 55

   85 argu: basic . ID

    ID  shift, and go to state 93


State 56

   15 gvar_def: basic gvar_list ID ';' .

    $default  reduce using rule 15 (gvar_def)


State 57

   16 gvar_def: basic gvar_list ID '=' . expr ';'
   22 gvar_list: gvar_list ID '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 94
    func_invo     go to state 51


State 58

   21 gvar_list: gvar_list ID ',' .

    $default  reduce using rule 21 (gvar_list)


State 59

   53 func_def: void_reduce ID '(' ')' . $@14 '{' $@15 compound_in_argu_func '}'
   82 func_decl: void_reduce ID '(' ')' . $@23 ';'

    ';'       reduce using rule 81 ($@23)
    $default  reduce using rule 51 ($@14)

    $@14  go to state 95
    $@23  go to state 96


State 60

   47 func_def: void_reduce ID '(' argu_list . argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   78 func_decl: void_reduce ID '(' argu_list . argu ')' $@21 ';'
   83 argu_list: argu_list . argu ','

    BASIC_TYPE  shift, and go to state 2

    argu   go to state 97
    basic  go to state 55


State 61

   50 func_def: void_reduce ID '(' argu . ')' $@12 '{' $@13 compound_in_argu_func '}'
   80 func_decl: void_reduce ID '(' argu . ')' $@22 ';'
   84 argu_list: argu . ','

    ','  shift, and go to state 91
    ')'  shift, and go to state 98


State 62

   89 liter_const: '-' . int_value
   91            | '-' . float_value

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39

    int_value    go to state 99
    float_value  go to state 100


State 63

   20 gvar_def: CONST basic ID '=' liter_const . ';'
   26 gconst_list: ID '=' liter_const . ','

    ';'  shift, and go to state 101
    ','  shift, and go to state 102


State 64

   88 liter_const: int_value .

    $default  reduce using rule 88 (liter_const)


State 65

   90 liter_const: float_value .

    $default  reduce using rule 90 (liter_const)


State 66

   92 liter_const: bool_value .

    $default  reduce using rule 92 (liter_const)


State 67

   93 liter_const: string_value .

    $default  reduce using rule 93 (liter_const)


State 68

   19 gvar_def: CONST basic gconst_list ID '=' . liter_const ';'
   25 gconst_list: gconst_list ID '=' . liter_const ','

    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 62

    liter_const   go to state 103
    int_value     go to state 64
    float_value   go to state 65
    bool_value    go to state 66
    string_value  go to state 67


State 69

  127 func_invo: ID '(' . expr_list expr ')'
  128          | ID '(' . expr ')'
  129          | ID '(' . ')'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    ')'           shift, and go to state 104
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 105
    func_invo     go to state 51
    expr_list     go to state 106


State 70

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  120     | '-' expr .
  121     | expr . AND expr
  122     | expr . OR expr

    $default  reduce using rule 120 (expr)


State 71

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  119     | '(' expr . ')'
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ')'  shift, and go to state 107


State 72

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  123     | '!' expr .

    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 123 (expr)


State 73

  122 expr: expr OR . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 108
    func_invo     go to state 51


State 74

  121 expr: expr AND . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 109
    func_invo     go to state 51


State 75

  114 expr: expr LE . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 110
    func_invo     go to state 51


State 76

  117 expr: expr EQ . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 111
    func_invo     go to state 51


State 77

  116 expr: expr GE . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 112
    func_invo     go to state 51


State 78

  118 expr: expr NE . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 113
    func_invo     go to state 51


State 79

  113 expr: expr '<' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 114
    func_invo     go to state 51


State 80

  115 expr: expr '>' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 115
    func_invo     go to state 51


State 81

  110 expr: expr '+' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 116
    func_invo     go to state 51


State 82

  111 expr: expr '-' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 117
    func_invo     go to state 51


State 83

  108 expr: expr '*' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 118
    func_invo     go to state 51


State 84

  109 expr: expr '/' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 119
    func_invo     go to state 51


State 85

  112 expr: expr '%' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 120
    func_invo     go to state 51


State 86

   18 gvar_def: basic ID '=' expr ';' .

    $default  reduce using rule 18 (gvar_def)


State 87

   24 gvar_list: ID '=' expr ',' .

    $default  reduce using rule 24 (gvar_list)


State 88

   44 func_def: basic ID '(' ')' $@7 . '{' $@8 compound_in_argu_func $@9 '}'

    '{'  shift, and go to state 121


State 89

   76 func_decl: basic ID '(' ')' $@20 . ';'

    ';'  shift, and go to state 122


State 90

   36 func_def: basic ID '(' argu_list argu . ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   72 func_decl: basic ID '(' argu_list argu . ')' $@18 ';'
   83 argu_list: argu_list argu . ','

    ','  shift, and go to state 123
    ')'  shift, and go to state 124


State 91

   84 argu_list: argu ',' .

    $default  reduce using rule 84 (argu_list)


State 92

   40 func_def: basic ID '(' argu ')' . $@4 '{' $@5 compound_in_argu_func $@6 '}'
   74 func_decl: basic ID '(' argu ')' . $@19 ';'

    ';'       reduce using rule 73 ($@19)
    $default  reduce using rule 37 ($@4)

    $@4   go to state 125
    $@19  go to state 126


State 93

   85 argu: basic ID .

    $default  reduce using rule 85 (argu)


State 94

   16 gvar_def: basic gvar_list ID '=' expr . ';'
   22 gvar_list: gvar_list ID '=' expr . ','
  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 127
    ','  shift, and go to state 128


State 95

   53 func_def: void_reduce ID '(' ')' $@14 . '{' $@15 compound_in_argu_func '}'

    '{'  shift, and go to state 129


State 96

   82 func_decl: void_reduce ID '(' ')' $@23 . ';'

    ';'  shift, and go to state 130


State 97

   47 func_def: void_reduce ID '(' argu_list argu . ')' $@10 '{' $@11 compound_in_argu_func '}'
   78 func_decl: void_reduce ID '(' argu_list argu . ')' $@21 ';'
   83 argu_list: argu_list argu . ','

    ','  shift, and go to state 123
    ')'  shift, and go to state 131


State 98

   50 func_def: void_reduce ID '(' argu ')' . $@12 '{' $@13 compound_in_argu_func '}'
   80 func_decl: void_reduce ID '(' argu ')' . $@22 ';'

    ';'       reduce using rule 79 ($@22)
    $default  reduce using rule 48 ($@12)

    $@12  go to state 132
    $@22  go to state 133


State 99

   89 liter_const: '-' int_value .

    $default  reduce using rule 89 (liter_const)


State 100

   91 liter_const: '-' float_value .

    $default  reduce using rule 91 (liter_const)


State 101

   20 gvar_def: CONST basic ID '=' liter_const ';' .

    $default  reduce using rule 20 (gvar_def)


State 102

   26 gconst_list: ID '=' liter_const ',' .

    $default  reduce using rule 26 (gconst_list)


State 103

   19 gvar_def: CONST basic gconst_list ID '=' liter_const . ';'
   25 gconst_list: gconst_list ID '=' liter_const . ','

    ';'  shift, and go to state 134
    ','  shift, and go to state 135


State 104

  129 func_invo: ID '(' ')' .

    $default  reduce using rule 129 (func_invo)


State 105

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  128 func_invo: ID '(' expr . ')'
  131 expr_list: expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 136
    ')'  shift, and go to state 137


State 106

  127 func_invo: ID '(' expr_list . expr ')'
  130 expr_list: expr_list . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 138
    func_invo     go to state 51


State 107

  119 expr: '(' expr ')' .

    $default  reduce using rule 119 (expr)


State 108

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  122     | expr OR expr .

    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 122 (expr)


State 109

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  121     | expr AND expr .
  122     | expr . OR expr

    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 121 (expr)


State 110

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  114     | expr LE expr .
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 114 (expr)


State 111

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  117     | expr EQ expr .
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 117 (expr)


State 112

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  116     | expr GE expr .
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 116 (expr)


State 113

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  118     | expr NE expr .
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 118 (expr)


State 114

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  113     | expr '<' expr .
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 113 (expr)


State 115

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  115     | expr '>' expr .
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 115 (expr)


State 116

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  110     | expr '+' expr .
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 110 (expr)


State 117

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  111     | expr '-' expr .
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 111 (expr)


State 118

  108 expr: expr . '*' expr
  108     | expr '*' expr .
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    $default  reduce using rule 108 (expr)


State 119

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  109     | expr '/' expr .
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    $default  reduce using rule 109 (expr)


State 120

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  112     | expr '%' expr .
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    $default  reduce using rule 112 (expr)


State 121

   44 func_def: basic ID '(' ')' $@7 '{' . $@8 compound_in_argu_func $@9 '}'

    $default  reduce using rule 42 ($@8)

    $@8  go to state 139


State 122

   76 func_decl: basic ID '(' ')' $@20 ';' .

    $default  reduce using rule 76 (func_decl)


State 123

   83 argu_list: argu_list argu ',' .

    $default  reduce using rule 83 (argu_list)


State 124

   36 func_def: basic ID '(' argu_list argu ')' . $@1 '{' $@2 compound_in_argu_func $@3 '}'
   72 func_decl: basic ID '(' argu_list argu ')' . $@18 ';'

    ';'       reduce using rule 71 ($@18)
    $default  reduce using rule 33 ($@1)

    $@1   go to state 140
    $@18  go to state 141


State 125

   40 func_def: basic ID '(' argu ')' $@4 . '{' $@5 compound_in_argu_func $@6 '}'

    '{'  shift, and go to state 142


State 126

   74 func_decl: basic ID '(' argu ')' $@19 . ';'

    ';'  shift, and go to state 143


State 127

   16 gvar_def: basic gvar_list ID '=' expr ';' .

    $default  reduce using rule 16 (gvar_def)


State 128

   22 gvar_list: gvar_list ID '=' expr ',' .

    $default  reduce using rule 22 (gvar_list)


State 129

   53 func_def: void_reduce ID '(' ')' $@14 '{' . $@15 compound_in_argu_func '}'

    $default  reduce using rule 52 ($@15)

    $@15  go to state 144


State 130

   82 func_decl: void_reduce ID '(' ')' $@23 ';' .

    $default  reduce using rule 82 (func_decl)


State 131

   47 func_def: void_reduce ID '(' argu_list argu ')' . $@10 '{' $@11 compound_in_argu_func '}'
   78 func_decl: void_reduce ID '(' argu_list argu ')' . $@21 ';'

    ';'       reduce using rule 77 ($@21)
    $default  reduce using rule 45 ($@10)

    $@10  go to state 145
    $@21  go to state 146


State 132

   50 func_def: void_reduce ID '(' argu ')' $@12 . '{' $@13 compound_in_argu_func '}'

    '{'  shift, and go to state 147


State 133

   80 func_decl: void_reduce ID '(' argu ')' $@22 . ';'

    ';'  shift, and go to state 148


State 134

   19 gvar_def: CONST basic gconst_list ID '=' liter_const ';' .

    $default  reduce using rule 19 (gvar_def)


State 135

   25 gconst_list: gconst_list ID '=' liter_const ',' .

    $default  reduce using rule 25 (gconst_list)


State 136

  131 expr_list: expr ',' .

    $default  reduce using rule 131 (expr_list)


State 137

  128 func_invo: ID '(' expr ')' .

    $default  reduce using rule 128 (func_invo)


State 138

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  127 func_invo: ID '(' expr_list expr . ')'
  130 expr_list: expr_list expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 149
    ')'  shift, and go to state 150


State 139

   44 func_def: basic ID '(' ')' $@7 '{' $@8 . compound_in_argu_func $@9 '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 66 (compound_in_argu_func)

    var_def                go to state 163
    compound               go to state 164
    statement              go to state 165
    compound_in_argu_func  go to state 166
    compound_list          go to state 167
    basic                  go to state 168
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 169
    func_invo              go to state 51
    simple_stat            go to state 170
    var_ref                go to state 171
    condition              go to state 172
    while_stat             go to state 173
    for_stat               go to state 174
    jump_stat              go to state 175


State 140

   36 func_def: basic ID '(' argu_list argu ')' $@1 . '{' $@2 compound_in_argu_func $@3 '}'

    '{'  shift, and go to state 176


State 141

   72 func_decl: basic ID '(' argu_list argu ')' $@18 . ';'

    ';'  shift, and go to state 177


State 142

   40 func_def: basic ID '(' argu ')' $@4 '{' . $@5 compound_in_argu_func $@6 '}'

    $default  reduce using rule 38 ($@5)

    $@5  go to state 178


State 143

   74 func_decl: basic ID '(' argu ')' $@19 ';' .

    $default  reduce using rule 74 (func_decl)


State 144

   53 func_def: void_reduce ID '(' ')' $@14 '{' $@15 . compound_in_argu_func '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 66 (compound_in_argu_func)

    var_def                go to state 163
    compound               go to state 164
    statement              go to state 165
    compound_in_argu_func  go to state 179
    compound_list          go to state 167
    basic                  go to state 168
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 169
    func_invo              go to state 51
    simple_stat            go to state 170
    var_ref                go to state 171
    condition              go to state 172
    while_stat             go to state 173
    for_stat               go to state 174
    jump_stat              go to state 175


State 145

   47 func_def: void_reduce ID '(' argu_list argu ')' $@10 . '{' $@11 compound_in_argu_func '}'

    '{'  shift, and go to state 180


State 146

   78 func_decl: void_reduce ID '(' argu_list argu ')' $@21 . ';'

    ';'  shift, and go to state 181


State 147

   50 func_def: void_reduce ID '(' argu ')' $@12 '{' . $@13 compound_in_argu_func '}'

    $default  reduce using rule 49 ($@13)

    $@13  go to state 182


State 148

   80 func_decl: void_reduce ID '(' argu ')' $@22 ';' .

    $default  reduce using rule 80 (func_decl)


State 149

  130 expr_list: expr_list expr ',' .

    $default  reduce using rule 130 (expr_list)


State 150

  127 func_invo: ID '(' expr_list expr ')' .

    $default  reduce using rule 127 (func_invo)


State 151

  125 expr: ID .
  127 func_invo: ID . '(' expr_list expr ')'
  128          | ID . '(' expr ')'
  129          | ID . '(' ')'
  135 var_ref: ID .

    '('  shift, and go to state 69

    '='       reduce using rule 135 (var_ref)
    $default  reduce using rule 125 (expr)


State 152

  134 simple_stat: READ . var_ref ';'

    ID  shift, and go to state 183

    var_ref  go to state 184


State 153

  133 simple_stat: PRINT . expr ';'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 185
    func_invo     go to state 51


State 154

  136 condition: IF . '(' bool_expr ')' compound
  137          | IF . '(' bool_expr ')' compound ELSE compound

    '('  shift, and go to state 186


State 155

  142 while_stat: DO . $@25 compound WHILE '(' bool_expr ')' ';'

    $default  reduce using rule 141 ($@25)

    $@25  go to state 187


State 156

  140 while_stat: WHILE . '(' bool_expr ')' $@24 compound

    '('  shift, and go to state 188


State 157

  144 for_stat: FOR . '(' init_expr ';' bool_expr ';' incr_expr ')' $@26 compound
  146         | FOR . '(' init_expr ';' ';' incr_expr ')' $@27 compound

    '('  shift, and go to state 189


State 158

  168 jump_stat: CONTINUE . ';'

    ';'  shift, and go to state 190


State 159

  167 jump_stat: BREAK . ';'

    ';'  shift, and go to state 191


State 160

  165 jump_stat: RETURN . ';'
  166          | RETURN . expr ';'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    ';'           shift, and go to state 192
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 193
    func_invo     go to state 51


State 161

   31 var_def: CONST . basic const_list ID '=' liter_const ';'
   32        | CONST . basic ID '=' liter_const ';'

    BASIC_TYPE  shift, and go to state 2

    basic  go to state 194


State 162

   55 compound: '{' . $@16 compound_list '}'
   57         | '{' . $@17 '}'

    '}'       reduce using rule 56 ($@17)
    $default  reduce using rule 54 ($@16)

    $@16  go to state 195
    $@17  go to state 196


State 163

   70 compound_list: var_def .

    $default  reduce using rule 70 (compound_list)


State 164

   58 statement: compound .

    $default  reduce using rule 58 (statement)


State 165

   69 compound_list: statement .

    $default  reduce using rule 69 (compound_list)


State 166

   44 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func . $@9 '}'

    $default  reduce using rule 43 ($@9)

    $@9  go to state 197


State 167

   65 compound_in_argu_func: compound_list .
   67 compound_list: compound_list . var_def
   68              | compound_list . statement

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 65 (compound_in_argu_func)

    var_def       go to state 198
    compound      go to state 164
    statement     go to state 199
    basic         go to state 168
    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 169
    func_invo     go to state 51
    simple_stat   go to state 170
    var_ref       go to state 171
    condition     go to state 172
    while_stat    go to state 173
    for_stat      go to state 174
    jump_stat     go to state 175


State 168

   27 var_def: basic . var_list ID ';'
   28        | basic . var_list ID '=' expr ';'
   29        | basic . ID ';'
   30        | basic . ID '=' expr ';'

    ID  shift, and go to state 200

    var_list  go to state 201


State 169

   64 statement: expr . ';'
  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 202


State 170

   59 statement: simple_stat .

    $default  reduce using rule 59 (statement)


State 171

  132 simple_stat: var_ref . '=' expr ';'

    '='  shift, and go to state 203


State 172

   60 statement: condition .

    $default  reduce using rule 60 (statement)


State 173

   61 statement: while_stat .

    $default  reduce using rule 61 (statement)


State 174

   62 statement: for_stat .

    $default  reduce using rule 62 (statement)


State 175

   63 statement: jump_stat .

    $default  reduce using rule 63 (statement)


State 176

   36 func_def: basic ID '(' argu_list argu ')' $@1 '{' . $@2 compound_in_argu_func $@3 '}'

    $default  reduce using rule 34 ($@2)

    $@2  go to state 204


State 177

   72 func_decl: basic ID '(' argu_list argu ')' $@18 ';' .

    $default  reduce using rule 72 (func_decl)


State 178

   40 func_def: basic ID '(' argu ')' $@4 '{' $@5 . compound_in_argu_func $@6 '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 66 (compound_in_argu_func)

    var_def                go to state 163
    compound               go to state 164
    statement              go to state 165
    compound_in_argu_func  go to state 205
    compound_list          go to state 167
    basic                  go to state 168
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 169
    func_invo              go to state 51
    simple_stat            go to state 170
    var_ref                go to state 171
    condition              go to state 172
    while_stat             go to state 173
    for_stat               go to state 174
    jump_stat              go to state 175


State 179

   53 func_def: void_reduce ID '(' ')' $@14 '{' $@15 compound_in_argu_func . '}'

    '}'  shift, and go to state 206


State 180

   47 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' . $@11 compound_in_argu_func '}'

    $default  reduce using rule 46 ($@11)

    $@11  go to state 207


State 181

   78 func_decl: void_reduce ID '(' argu_list argu ')' $@21 ';' .

    $default  reduce using rule 78 (func_decl)


State 182

   50 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 . compound_in_argu_func '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 66 (compound_in_argu_func)

    var_def                go to state 163
    compound               go to state 164
    statement              go to state 165
    compound_in_argu_func  go to state 208
    compound_list          go to state 167
    basic                  go to state 168
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 169
    func_invo              go to state 51
    simple_stat            go to state 170
    var_ref                go to state 171
    condition              go to state 172
    while_stat             go to state 173
    for_stat               go to state 174
    jump_stat              go to state 175


State 183

  135 var_ref: ID .

    $default  reduce using rule 135 (var_ref)


State 184

  134 simple_stat: READ var_ref . ';'

    ';'  shift, and go to state 209


State 185

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  133 simple_stat: PRINT expr . ';'

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 210


State 186

  136 condition: IF '(' . bool_expr ')' compound
  137          | IF '(' . bool_expr ')' compound ELSE compound

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 211
    func_invo     go to state 51
    bool_expr     go to state 212


State 187

  142 while_stat: DO $@25 . compound WHILE '(' bool_expr ')' ';'

    '{'  shift, and go to state 162

    compound  go to state 213


State 188

  140 while_stat: WHILE '(' . bool_expr ')' $@24 compound

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 211
    func_invo     go to state 51
    bool_expr     go to state 214


State 189

  144 for_stat: FOR '(' . init_expr ';' bool_expr ';' incr_expr ')' $@26 compound
  146         | FOR '(' . init_expr ';' ';' incr_expr ')' $@27 compound

    ID  shift, and go to state 215

    $default  reduce using rule 151 (init_expr)

    func_invo       go to state 216
    var_ref         go to state 217
    init_expr       go to state 218
    init_expr_list  go to state 219


State 190

  168 jump_stat: CONTINUE ';' .

    $default  reduce using rule 168 (jump_stat)


State 191

  167 jump_stat: BREAK ';' .

    $default  reduce using rule 167 (jump_stat)


State 192

  165 jump_stat: RETURN ';' .

    $default  reduce using rule 165 (jump_stat)


State 193

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  166 jump_stat: RETURN expr . ';'

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 220


State 194

   31 var_def: CONST basic . const_list ID '=' liter_const ';'
   32        | CONST basic . ID '=' liter_const ';'

    ID  shift, and go to state 221

    const_list  go to state 222


State 195

   55 compound: '{' $@16 . compound_list '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    var_def        go to state 163
    compound       go to state 164
    statement      go to state 165
    compound_list  go to state 223
    basic          go to state 168
    value_type     go to state 45
    int_value      go to state 46
    float_value    go to state 47
    bool_value     go to state 48
    string_value   go to state 49
    expr           go to state 169
    func_invo      go to state 51
    simple_stat    go to state 170
    var_ref        go to state 171
    condition      go to state 172
    while_stat     go to state 173
    for_stat       go to state 174
    jump_stat      go to state 175


State 196

   57 compound: '{' $@17 . '}'

    '}'  shift, and go to state 224


State 197

   44 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 . '}'

    '}'  shift, and go to state 225


State 198

   67 compound_list: compound_list var_def .

    $default  reduce using rule 67 (compound_list)


State 199

   68 compound_list: compound_list statement .

    $default  reduce using rule 68 (compound_list)


State 200

   29 var_def: basic ID . ';'
   30        | basic ID . '=' expr ';'
  104 var_list: ID . ','
  105         | ID . '=' expr ','

    ';'  shift, and go to state 226
    '='  shift, and go to state 227
    ','  shift, and go to state 228


State 201

   27 var_def: basic var_list . ID ';'
   28        | basic var_list . ID '=' expr ';'
  102 var_list: var_list . ID ','
  103         | var_list . ID '=' expr ','

    ID  shift, and go to state 229


State 202

   64 statement: expr ';' .

    $default  reduce using rule 64 (statement)


State 203

  132 simple_stat: var_ref '=' . expr ';'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 230
    func_invo     go to state 51


State 204

   36 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 . compound_in_argu_func $@3 '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 66 (compound_in_argu_func)

    var_def                go to state 163
    compound               go to state 164
    statement              go to state 165
    compound_in_argu_func  go to state 231
    compound_list          go to state 167
    basic                  go to state 168
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 169
    func_invo              go to state 51
    simple_stat            go to state 170
    var_ref                go to state 171
    condition              go to state 172
    while_stat             go to state 173
    for_stat               go to state 174
    jump_stat              go to state 175


State 205

   40 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func . $@6 '}'

    $default  reduce using rule 39 ($@6)

    $@6  go to state 232


State 206

   53 func_def: void_reduce ID '(' ')' $@14 '{' $@15 compound_in_argu_func '}' .

    $default  reduce using rule 53 (func_def)


State 207

   47 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 . compound_in_argu_func '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 66 (compound_in_argu_func)

    var_def                go to state 163
    compound               go to state 164
    statement              go to state 165
    compound_in_argu_func  go to state 233
    compound_list          go to state 167
    basic                  go to state 168
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 169
    func_invo              go to state 51
    simple_stat            go to state 170
    var_ref                go to state 171
    condition              go to state 172
    while_stat             go to state 173
    for_stat               go to state 174
    jump_stat              go to state 175


State 208

   50 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func . '}'

    '}'  shift, and go to state 234


State 209

  134 simple_stat: READ var_ref ';' .

    $default  reduce using rule 134 (simple_stat)


State 210

  133 simple_stat: PRINT expr ';' .

    $default  reduce using rule 133 (simple_stat)


State 211

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  138 bool_expr: expr .

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 138 (bool_expr)


State 212

  136 condition: IF '(' bool_expr . ')' compound
  137          | IF '(' bool_expr . ')' compound ELSE compound

    ')'  shift, and go to state 235


State 213

  142 while_stat: DO $@25 compound . WHILE '(' bool_expr ')' ';'

    WHILE  shift, and go to state 236


State 214

  140 while_stat: WHILE '(' bool_expr . ')' $@24 compound

    ')'  shift, and go to state 237


State 215

  127 func_invo: ID . '(' expr_list expr ')'
  128          | ID . '(' expr ')'
  129          | ID . '(' ')'
  135 var_ref: ID .

    '('  shift, and go to state 69

    $default  reduce using rule 135 (var_ref)


State 216

  149 init_expr: func_invo .
  154 init_expr_list: func_invo . ','

    ','  shift, and go to state 238

    $default  reduce using rule 149 (init_expr)


State 217

  150 init_expr: var_ref . '=' expr
  155 init_expr_list: var_ref . '=' expr ','

    '='  shift, and go to state 239


State 218

  144 for_stat: FOR '(' init_expr . ';' bool_expr ';' incr_expr ')' $@26 compound
  146         | FOR '(' init_expr . ';' ';' incr_expr ')' $@27 compound

    ';'  shift, and go to state 240


State 219

  147 init_expr: init_expr_list . var_ref '=' expr
  148          | init_expr_list . func_invo
  152 init_expr_list: init_expr_list . var_ref '=' expr ','
  153               | init_expr_list . func_invo ','

    ID  shift, and go to state 215

    func_invo  go to state 241
    var_ref    go to state 242


State 220

  166 jump_stat: RETURN expr ';' .

    $default  reduce using rule 166 (jump_stat)


State 221

   32 var_def: CONST basic ID . '=' liter_const ';'
  107 const_list: ID . '=' liter_const ','

    '='  shift, and go to state 243


State 222

   31 var_def: CONST basic const_list . ID '=' liter_const ';'
  106 const_list: const_list . ID '=' liter_const ','

    ID  shift, and go to state 244


State 223

   55 compound: '{' $@16 compound_list . '}'
   67 compound_list: compound_list . var_def
   68              | compound_list . statement

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '}'           shift, and go to state 245
    '!'           shift, and go to state 44

    var_def       go to state 198
    compound      go to state 164
    statement     go to state 199
    basic         go to state 168
    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 169
    func_invo     go to state 51
    simple_stat   go to state 170
    var_ref       go to state 171
    condition     go to state 172
    while_stat    go to state 173
    for_stat      go to state 174
    jump_stat     go to state 175


State 224

   57 compound: '{' $@17 '}' .

    $default  reduce using rule 57 (compound)


State 225

   44 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}' .

    $default  reduce using rule 44 (func_def)


State 226

   29 var_def: basic ID ';' .

    $default  reduce using rule 29 (var_def)


State 227

   30 var_def: basic ID '=' . expr ';'
  105 var_list: ID '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 246
    func_invo     go to state 51


State 228

  104 var_list: ID ',' .

    $default  reduce using rule 104 (var_list)


State 229

   27 var_def: basic var_list ID . ';'
   28        | basic var_list ID . '=' expr ';'
  102 var_list: var_list ID . ','
  103         | var_list ID . '=' expr ','

    ';'  shift, and go to state 247
    '='  shift, and go to state 248
    ','  shift, and go to state 249


State 230

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  132 simple_stat: var_ref '=' expr . ';'

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 250


State 231

   36 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func . $@3 '}'

    $default  reduce using rule 35 ($@3)

    $@3  go to state 251


State 232

   40 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 . '}'

    '}'  shift, and go to state 252


State 233

   47 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func . '}'

    '}'  shift, and go to state 253


State 234

   50 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}' .

    $default  reduce using rule 50 (func_def)


State 235

  136 condition: IF '(' bool_expr ')' . compound
  137          | IF '(' bool_expr ')' . compound ELSE compound

    '{'  shift, and go to state 162

    compound  go to state 254


State 236

  142 while_stat: DO $@25 compound WHILE . '(' bool_expr ')' ';'

    '('  shift, and go to state 255


State 237

  140 while_stat: WHILE '(' bool_expr ')' . $@24 compound

    $default  reduce using rule 139 ($@24)

    $@24  go to state 256


State 238

  154 init_expr_list: func_invo ',' .

    $default  reduce using rule 154 (init_expr_list)


State 239

  150 init_expr: var_ref '=' . expr
  155 init_expr_list: var_ref '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 257
    func_invo     go to state 51


State 240

  144 for_stat: FOR '(' init_expr ';' . bool_expr ';' incr_expr ')' $@26 compound
  146         | FOR '(' init_expr ';' . ';' incr_expr ')' $@27 compound

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    ';'           shift, and go to state 258
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 211
    func_invo     go to state 51
    bool_expr     go to state 259


State 241

  148 init_expr: init_expr_list func_invo .
  153 init_expr_list: init_expr_list func_invo . ','

    ','  shift, and go to state 260

    $default  reduce using rule 148 (init_expr)


State 242

  147 init_expr: init_expr_list var_ref . '=' expr
  152 init_expr_list: init_expr_list var_ref . '=' expr ','

    '='  shift, and go to state 261


State 243

   32 var_def: CONST basic ID '=' . liter_const ';'
  107 const_list: ID '=' . liter_const ','

    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 62

    liter_const   go to state 262
    int_value     go to state 64
    float_value   go to state 65
    bool_value    go to state 66
    string_value  go to state 67


State 244

   31 var_def: CONST basic const_list ID . '=' liter_const ';'
  106 const_list: const_list ID . '=' liter_const ','

    '='  shift, and go to state 263


State 245

   55 compound: '{' $@16 compound_list '}' .

    $default  reduce using rule 55 (compound)


State 246

   30 var_def: basic ID '=' expr . ';'
  105 var_list: ID '=' expr . ','
  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 264
    ','  shift, and go to state 265


State 247

   27 var_def: basic var_list ID ';' .

    $default  reduce using rule 27 (var_def)


State 248

   28 var_def: basic var_list ID '=' . expr ';'
  103 var_list: var_list ID '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 266
    func_invo     go to state 51


State 249

  102 var_list: var_list ID ',' .

    $default  reduce using rule 102 (var_list)


State 250

  132 simple_stat: var_ref '=' expr ';' .

    $default  reduce using rule 132 (simple_stat)


State 251

   36 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 . '}'

    '}'  shift, and go to state 267


State 252

   40 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}' .

    $default  reduce using rule 40 (func_def)


State 253

   47 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}' .

    $default  reduce using rule 47 (func_def)


State 254

  136 condition: IF '(' bool_expr ')' compound .
  137          | IF '(' bool_expr ')' compound . ELSE compound

    ELSE  shift, and go to state 268

    $default  reduce using rule 136 (condition)


State 255

  142 while_stat: DO $@25 compound WHILE '(' . bool_expr ')' ';'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 211
    func_invo     go to state 51
    bool_expr     go to state 269


State 256

  140 while_stat: WHILE '(' bool_expr ')' $@24 . compound

    '{'  shift, and go to state 162

    compound  go to state 270


State 257

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  150 init_expr: var_ref '=' expr .
  155 init_expr_list: var_ref '=' expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 271

    $default  reduce using rule 150 (init_expr)


State 258

  146 for_stat: FOR '(' init_expr ';' ';' . incr_expr ')' $@27 compound

    ID  shift, and go to state 215

    $default  reduce using rule 160 (incr_expr)

    func_invo       go to state 272
    var_ref         go to state 273
    incr_expr       go to state 274
    incr_expr_list  go to state 275


State 259

  144 for_stat: FOR '(' init_expr ';' bool_expr . ';' incr_expr ')' $@26 compound

    ';'  shift, and go to state 276


State 260

  153 init_expr_list: init_expr_list func_invo ',' .

    $default  reduce using rule 153 (init_expr_list)


State 261

  147 init_expr: init_expr_list var_ref '=' . expr
  152 init_expr_list: init_expr_list var_ref '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 277
    func_invo     go to state 51


State 262

   32 var_def: CONST basic ID '=' liter_const . ';'
  107 const_list: ID '=' liter_const . ','

    ';'  shift, and go to state 278
    ','  shift, and go to state 279


State 263

   31 var_def: CONST basic const_list ID '=' . liter_const ';'
  106 const_list: const_list ID '=' . liter_const ','

    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 62

    liter_const   go to state 280
    int_value     go to state 64
    float_value   go to state 65
    bool_value    go to state 66
    string_value  go to state 67


State 264

   30 var_def: basic ID '=' expr ';' .

    $default  reduce using rule 30 (var_def)


State 265

  105 var_list: ID '=' expr ',' .

    $default  reduce using rule 105 (var_list)


State 266

   28 var_def: basic var_list ID '=' expr . ';'
  103 var_list: var_list ID '=' expr . ','
  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 281
    ','  shift, and go to state 282


State 267

   36 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}' .

    $default  reduce using rule 36 (func_def)


State 268

  137 condition: IF '(' bool_expr ')' compound ELSE . compound

    '{'  shift, and go to state 162

    compound  go to state 283


State 269

  142 while_stat: DO $@25 compound WHILE '(' bool_expr . ')' ';'

    ')'  shift, and go to state 284


State 270

  140 while_stat: WHILE '(' bool_expr ')' $@24 compound .

    $default  reduce using rule 140 (while_stat)


State 271

  155 init_expr_list: var_ref '=' expr ',' .

    $default  reduce using rule 155 (init_expr_list)


State 272

  159 incr_expr: func_invo .
  164 incr_expr_list: func_invo .

    ID        reduce using rule 164 (incr_expr_list)
    $default  reduce using rule 159 (incr_expr)


State 273

  158 incr_expr: var_ref . '=' expr
  163 incr_expr_list: var_ref . '=' expr ','

    '='  shift, and go to state 285


State 274

  146 for_stat: FOR '(' init_expr ';' ';' incr_expr . ')' $@27 compound

    ')'  shift, and go to state 286


State 275

  156 incr_expr: incr_expr_list . var_ref '=' expr ','
  157          | incr_expr_list . func_invo
  161 incr_expr_list: incr_expr_list . var_ref '=' expr ','
  162               | incr_expr_list . func_invo ','

    ID  shift, and go to state 215

    func_invo  go to state 287
    var_ref    go to state 288


State 276

  144 for_stat: FOR '(' init_expr ';' bool_expr ';' . incr_expr ')' $@26 compound

    ID  shift, and go to state 215

    $default  reduce using rule 160 (incr_expr)

    func_invo       go to state 272
    var_ref         go to state 273
    incr_expr       go to state 289
    incr_expr_list  go to state 275


State 277

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  147 init_expr: init_expr_list var_ref '=' expr .
  152 init_expr_list: init_expr_list var_ref '=' expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 290

    $default  reduce using rule 147 (init_expr)


State 278

   32 var_def: CONST basic ID '=' liter_const ';' .

    $default  reduce using rule 32 (var_def)


State 279

  107 const_list: ID '=' liter_const ',' .

    $default  reduce using rule 107 (const_list)


State 280

   31 var_def: CONST basic const_list ID '=' liter_const . ';'
  106 const_list: const_list ID '=' liter_const . ','

    ';'  shift, and go to state 291
    ','  shift, and go to state 292


State 281

   28 var_def: basic var_list ID '=' expr ';' .

    $default  reduce using rule 28 (var_def)


State 282

  103 var_list: var_list ID '=' expr ',' .

    $default  reduce using rule 103 (var_list)


State 283

  137 condition: IF '(' bool_expr ')' compound ELSE compound .

    $default  reduce using rule 137 (condition)


State 284

  142 while_stat: DO $@25 compound WHILE '(' bool_expr ')' . ';'

    ';'  shift, and go to state 293


State 285

  158 incr_expr: var_ref '=' . expr
  163 incr_expr_list: var_ref '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 294
    func_invo     go to state 51


State 286

  146 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' . $@27 compound

    $default  reduce using rule 145 ($@27)

    $@27  go to state 295


State 287

  157 incr_expr: incr_expr_list func_invo .
  162 incr_expr_list: incr_expr_list func_invo . ','

    ','  shift, and go to state 296

    $default  reduce using rule 157 (incr_expr)


State 288

  156 incr_expr: incr_expr_list var_ref . '=' expr ','
  161 incr_expr_list: incr_expr_list var_ref . '=' expr ','

    '='  shift, and go to state 297


State 289

  144 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr . ')' $@26 compound

    ')'  shift, and go to state 298


State 290

  152 init_expr_list: init_expr_list var_ref '=' expr ',' .

    $default  reduce using rule 152 (init_expr_list)


State 291

   31 var_def: CONST basic const_list ID '=' liter_const ';' .

    $default  reduce using rule 31 (var_def)


State 292

  106 const_list: const_list ID '=' liter_const ',' .

    $default  reduce using rule 106 (const_list)


State 293

  142 while_stat: DO $@25 compound WHILE '(' bool_expr ')' ';' .

    $default  reduce using rule 142 (while_stat)


State 294

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  158 incr_expr: var_ref '=' expr .
  163 incr_expr_list: var_ref '=' expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 299

    $default  reduce using rule 158 (incr_expr)


State 295

  146 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' $@27 . compound

    '{'  shift, and go to state 162

    compound  go to state 300


State 296

  162 incr_expr_list: incr_expr_list func_invo ',' .

    $default  reduce using rule 162 (incr_expr_list)


State 297

  156 incr_expr: incr_expr_list var_ref '=' . expr ','
  161 incr_expr_list: incr_expr_list var_ref '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 301
    func_invo     go to state 51


State 298

  144 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' . $@26 compound

    $default  reduce using rule 143 ($@26)

    $@26  go to state 302


State 299

  163 incr_expr_list: var_ref '=' expr ',' .

    $default  reduce using rule 163 (incr_expr_list)


State 300

  146 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' $@27 compound .

    $default  reduce using rule 146 (for_stat)


State 301

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  156 incr_expr: incr_expr_list var_ref '=' expr . ','
  161 incr_expr_list: incr_expr_list var_ref '=' expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 303


State 302

  144 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' $@26 . compound

    '{'  shift, and go to state 162

    compound  go to state 304


State 303

  156 incr_expr: incr_expr_list var_ref '=' expr ',' .
  161 incr_expr_list: incr_expr_list var_ref '=' expr ',' .

    ID        reduce using rule 161 (incr_expr_list)
    $default  reduce using rule 156 (incr_expr)


State 304

  144 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' $@26 compound .

    $default  reduce using rule 144 (for_stat)
