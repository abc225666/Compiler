Grammar

    0 $accept: program $end

    1 program: gvar_all_def func_def prog_content
    2        | gvar_all_def func_def
    3        | func_def prog_content
    4        | func_def

    5 prog_content: prog_content var_def
    6             | prog_content func_def
    7             | prog_content func_decl
    8             | var_def
    9             | func_def
   10             | func_decl

   11 gvar_all_def: gvar_all_def var_def
   12             | gvar_all_def func_decl
   13             | var_def
   14             | func_decl

   15 var_all_def: var_def

   16 $@1: %empty

   17 $@2: %empty

   18 $@3: %empty

   19 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'

   20 $@4: %empty

   21 $@5: %empty

   22 $@6: %empty

   23 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'

   24 $@7: %empty

   25 $@8: %empty

   26 $@9: %empty

   27 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'

   28 $@10: %empty

   29 $@11: %empty

   30 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'

   31 $@12: %empty

   32 $@13: %empty

   33 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}'

   34 $@14: %empty

   35 $@15: %empty

   36 func_def: void_reduce ID '(' ')' $@14 '{' $@15 compound_in_argu_func '}'

   37 $@16: %empty

   38 compound: '{' $@16 compound_list '}'

   39 $@17: %empty

   40 compound: '{' $@17 '}'

   41 compound_in_argu_func: compound_list
   42                      | %empty

   43 compound_list: compound_list var_all_def
   44              | compound_list statement
   45              | statement
   46              | var_all_def

   47 $@18: %empty

   48 func_decl: basic ID '(' argu_list argu ')' $@18 ';'

   49 $@19: %empty

   50 func_decl: basic ID '(' argu ')' $@19 ';'

   51 $@20: %empty

   52 func_decl: basic ID '(' ')' $@20 ';'

   53 $@21: %empty

   54 func_decl: void_reduce ID '(' argu_list argu ')' $@21 ';'

   55 $@22: %empty

   56 func_decl: void_reduce ID '(' argu ')' $@22 ';'

   57 $@23: %empty

   58 func_decl: void_reduce ID '(' ')' $@23 ';'

   59 argu_list: argu_list argu ','
   60          | argu ','

   61 argu: basic ID
   62     | basic ID array_argu_step

   63 array_argu_step: array_argu_step '[' INT_CONST ']'
   64                | '[' INT_CONST ']'

   65 basic: BASIC_TYPE

   66 void_reduce: VOID

   67 liter_const: int_value
   68            | '-' int_value
   69            | float_value
   70            | '-' float_value
   71            | bool_value
   72            | string_value

   73 value_type: int_value
   74           | float_value
   75           | bool_value
   76           | string_value

   77 int_value: INT_CONST

   78 float_value: FLOAT_CONST

   79 bool_value: BOOL_CONST

   80 string_value: STRING_CONST

   81 var_list: var_list ID ','
   82         | var_list ID '=' expr ','
   83         | ID ','
   84         | ID '=' expr ','
   85         | var_list ID arr_step '=' arr_init ','
   86         | var_list ID arr_step ','
   87         | ID arr_step '=' arr_init ','
   88         | ID arr_step ','

   89 const_list: const_list ID '=' liter_const ','
   90           | ID '=' liter_const ','

   91 var_def: basic var_list ID ';'
   92        | basic var_list ID '=' expr ';'
   93        | basic ID ';'
   94        | basic ID '=' expr ';'
   95        | basic var_list ID arr_step '=' arr_init ';'
   96        | basic var_list ID arr_step ';'
   97        | basic ID arr_step '=' arr_init ';'
   98        | basic ID arr_step ';'
   99        | CONST basic const_list ID '=' liter_const ';'
  100        | CONST basic ID '=' liter_const ';'

  101 arr_step: arr_step '[' INT_CONST ']'
  102         | '[' INT_CONST ']'

  103 arr_init: '{' arr_argu_list expr '}'
  104         | '{' expr '}'
  105         | '{' '}'

  106 arr_argu_list: arr_argu_list expr ','
  107              | expr ','

  108 expr: expr '*' expr
  109     | expr '/' expr
  110     | expr '+' expr
  111     | expr '-' expr
  112     | expr '%' expr
  113     | expr '<' expr
  114     | expr LE expr
  115     | expr '>' expr
  116     | expr GE expr
  117     | expr EQ expr
  118     | expr NE expr
  119     | '(' expr ')'
  120     | '-' expr
  121     | expr AND expr
  122     | expr OR expr
  123     | '!' expr
  124     | value_type
  125     | ID
  126     | func_invo
  127     | arr_ref

  128 arr_ref: ID arr_ref_step

  129 arr_ref_step: arr_ref_step '[' expr ']'
  130             | '[' expr ']'

  131 func_invo: ID '(' expr_list expr ')'
  132          | ID '(' expr ')'
  133          | ID '(' ')'

  134 expr_list: expr_list expr ','
  135          | expr ','

  136 statement: compound
  137          | simple_stat
  138          | condition
  139          | while_stat
  140          | for_stat
  141          | jump_stat
  142          | expr ';'

  143 simple_stat: var_ref '=' expr ';'
  144            | PRINT expr ';'
  145            | READ var_ref ';'

  146 var_ref: ID
  147        | arr_ref

  148 condition: IF '(' bool_expr ')' compound
  149          | IF '(' bool_expr ')' compound ELSE compound

  150 bool_expr: expr

  151 $@24: %empty

  152 while_stat: WHILE '(' bool_expr ')' $@24 compound

  153 $@25: %empty

  154 $@26: %empty

  155 while_stat: DO $@25 compound $@26 WHILE '(' bool_expr ')' ';'

  156 $@27: %empty

  157 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' $@27 compound

  158 $@28: %empty

  159 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' $@28 compound

  160 init_expr: init_expr_list var_ref '=' expr
  161          | init_expr_list func_invo
  162          | func_invo
  163          | var_ref '=' expr
  164          | %empty

  165 init_expr_list: init_expr_list var_ref '=' expr ','
  166               | init_expr_list func_invo ','
  167               | func_invo ','
  168               | var_ref '=' expr ','

  169 incr_expr: incr_expr_list var_ref '=' expr ','
  170          | incr_expr_list func_invo
  171          | var_ref '=' expr
  172          | func_invo
  173          | %empty

  174 incr_expr_list: incr_expr_list var_ref '=' expr ','
  175               | incr_expr_list func_invo ','
  176               | var_ref '=' expr ','
  177               | func_invo

  178 jump_stat: RETURN ';'
  179          | RETURN expr ';'
  180          | BREAK ';'
  181          | CONTINUE ';'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 123
'%' (37) 112
'(' (40) 19 23 27 30 33 36 48 50 52 54 56 58 119 131 132 133 148 149
    152 155 157 159
')' (41) 19 23 27 30 33 36 48 50 52 54 56 58 119 131 132 133 148 149
    152 155 157 159
'*' (42) 108
'+' (43) 110
',' (44) 59 60 81 82 83 84 85 86 87 88 89 90 106 107 134 135 165 166
    167 168 169 174 175 176
'-' (45) 68 70 111 120
'/' (47) 109
';' (59) 48 50 52 54 56 58 91 92 93 94 95 96 97 98 99 100 142 143 144
    145 155 157 159 178 179 180 181
'<' (60) 113
'=' (61) 82 84 85 87 89 90 92 94 95 97 99 100 143 160 163 165 168 169
    171 174 176
'>' (62) 115
'[' (91) 63 64 101 102 129 130
']' (93) 63 64 101 102 129 130
'{' (123) 19 23 27 30 33 36 38 40 103 104 105
'}' (125) 19 23 27 30 33 36 38 40 103 104 105
error (256)
VOID (258) 66
BASIC_TYPE (259) 65
ID (260) 19 23 27 30 33 36 48 50 52 54 56 58 61 62 81 82 83 84 85 86
    87 88 89 90 91 92 93 94 95 96 97 98 99 100 125 128 131 132 133
    146
INT_CONST (261) 63 64 77 101 102
FLOAT_CONST (262) 78
BOOL_CONST (263) 79
STRING_CONST (264) 80
READ (265) 145
PRINT (266) 144
IF (267) 148 149
ELSE (268) 149
DO (269) 155
WHILE (270) 152 155
FOR (271) 157 159
CONTINUE (272) 181
BREAK (273) 180
RETURN (274) 178 179
CONST (275) 99 100
OR (276) 122
AND (277) 121
LE (278) 114
EQ (279) 117
GE (280) 116
NE (281) 118
UNOT (282)
UMINUS (283)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1 2 3 4, on right: 0
prog_content (48)
    on left: 5 6 7 8 9 10, on right: 1 3 5 6 7
gvar_all_def (49)
    on left: 11 12 13 14, on right: 1 2 11 12
var_all_def (50)
    on left: 15, on right: 43 46
func_def (51)
    on left: 19 23 27 30 33 36, on right: 1 2 3 4 6 9
$@1 (52)
    on left: 16, on right: 19
$@2 (53)
    on left: 17, on right: 19
$@3 (54)
    on left: 18, on right: 19
$@4 (55)
    on left: 20, on right: 23
$@5 (56)
    on left: 21, on right: 23
$@6 (57)
    on left: 22, on right: 23
$@7 (58)
    on left: 24, on right: 27
$@8 (59)
    on left: 25, on right: 27
$@9 (60)
    on left: 26, on right: 27
$@10 (61)
    on left: 28, on right: 30
$@11 (62)
    on left: 29, on right: 30
$@12 (63)
    on left: 31, on right: 33
$@13 (64)
    on left: 32, on right: 33
$@14 (65)
    on left: 34, on right: 36
$@15 (66)
    on left: 35, on right: 36
compound (67)
    on left: 38 40, on right: 136 148 149 152 155 157 159
$@16 (68)
    on left: 37, on right: 38
$@17 (69)
    on left: 39, on right: 40
compound_in_argu_func (70)
    on left: 41 42, on right: 19 23 27 30 33 36
compound_list (71)
    on left: 43 44 45 46, on right: 38 41 43 44
func_decl (72)
    on left: 48 50 52 54 56 58, on right: 7 10 12 14
$@18 (73)
    on left: 47, on right: 48
$@19 (74)
    on left: 49, on right: 50
$@20 (75)
    on left: 51, on right: 52
$@21 (76)
    on left: 53, on right: 54
$@22 (77)
    on left: 55, on right: 56
$@23 (78)
    on left: 57, on right: 58
argu_list (79)
    on left: 59 60, on right: 19 30 48 54 59
argu (80)
    on left: 61 62, on right: 19 23 30 33 48 50 54 56 59 60
array_argu_step (81)
    on left: 63 64, on right: 62 63
basic (82)
    on left: 65, on right: 19 23 27 48 50 52 61 62 91 92 93 94 95 96
    97 98 99 100
void_reduce (83)
    on left: 66, on right: 30 33 36 54 56 58
liter_const (84)
    on left: 67 68 69 70 71 72, on right: 89 90 99 100
value_type (85)
    on left: 73 74 75 76, on right: 124
int_value (86)
    on left: 77, on right: 67 68 73
float_value (87)
    on left: 78, on right: 69 70 74
bool_value (88)
    on left: 79, on right: 71 75
string_value (89)
    on left: 80, on right: 72 76
var_list (90)
    on left: 81 82 83 84 85 86 87 88, on right: 81 82 85 86 91 92 95
    96
const_list (91)
    on left: 89 90, on right: 89 99
var_def (92)
    on left: 91 92 93 94 95 96 97 98 99 100, on right: 5 8 11 13 15
arr_step (93)
    on left: 101 102, on right: 85 86 87 88 95 96 97 98 101
arr_init (94)
    on left: 103 104 105, on right: 85 87 95 97
arr_argu_list (95)
    on left: 106 107, on right: 103 106
expr (96)
    on left: 108 109 110 111 112 113 114 115 116 117 118 119 120 121
    122 123 124 125 126 127, on right: 82 84 92 94 103 104 106 107
    108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123
    129 130 131 132 134 135 142 143 144 150 160 163 165 168 169 171
    174 176 179
arr_ref (97)
    on left: 128, on right: 127 147
arr_ref_step (98)
    on left: 129 130, on right: 128 129
func_invo (99)
    on left: 131 132 133, on right: 126 161 162 166 167 170 172 175
    177
expr_list (100)
    on left: 134 135, on right: 131 134
statement (101)
    on left: 136 137 138 139 140 141 142, on right: 44 45
simple_stat (102)
    on left: 143 144 145, on right: 137
var_ref (103)
    on left: 146 147, on right: 143 145 160 163 165 168 169 171 174
    176
condition (104)
    on left: 148 149, on right: 138
bool_expr (105)
    on left: 150, on right: 148 149 152 155 157
while_stat (106)
    on left: 152 155, on right: 139
$@24 (107)
    on left: 151, on right: 152
$@25 (108)
    on left: 153, on right: 155
$@26 (109)
    on left: 154, on right: 155
for_stat (110)
    on left: 157 159, on right: 140
$@27 (111)
    on left: 156, on right: 157
$@28 (112)
    on left: 158, on right: 159
init_expr (113)
    on left: 160 161 162 163 164, on right: 157 159
init_expr_list (114)
    on left: 165 166 167 168, on right: 160 161 165 166
incr_expr (115)
    on left: 169 170 171 172 173, on right: 157 159
incr_expr_list (116)
    on left: 174 175 176 177, on right: 169 170 174 175
jump_stat (117)
    on left: 178 179 180 181, on right: 141


State 0

    0 $accept: . program $end

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    program       go to state 4
    gvar_all_def  go to state 5
    func_def      go to state 6
    func_decl     go to state 7
    basic         go to state 8
    void_reduce   go to state 9
    var_def       go to state 10


State 1

   66 void_reduce: VOID .

    $default  reduce using rule 66 (void_reduce)


State 2

   65 basic: BASIC_TYPE .

    $default  reduce using rule 65 (basic)


State 3

   99 var_def: CONST . basic const_list ID '=' liter_const ';'
  100        | CONST . basic ID '=' liter_const ';'

    BASIC_TYPE  shift, and go to state 2

    basic  go to state 11


State 4

    0 $accept: program . $end

    $end  shift, and go to state 12


State 5

    1 program: gvar_all_def . func_def prog_content
    2        | gvar_all_def . func_def
   11 gvar_all_def: gvar_all_def . var_def
   12             | gvar_all_def . func_decl

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    func_def     go to state 13
    func_decl    go to state 14
    basic        go to state 8
    void_reduce  go to state 9
    var_def      go to state 15


State 6

    3 program: func_def . prog_content
    4        | func_def .

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 4 (program)

    prog_content  go to state 16
    func_def      go to state 17
    func_decl     go to state 18
    basic         go to state 8
    void_reduce   go to state 9
    var_def       go to state 19


State 7

   14 gvar_all_def: func_decl .

    $default  reduce using rule 14 (gvar_all_def)


State 8

   19 func_def: basic . ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   23         | basic . ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   27         | basic . ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'
   48 func_decl: basic . ID '(' argu_list argu ')' $@18 ';'
   50          | basic . ID '(' argu ')' $@19 ';'
   52          | basic . ID '(' ')' $@20 ';'
   91 var_def: basic . var_list ID ';'
   92        | basic . var_list ID '=' expr ';'
   93        | basic . ID ';'
   94        | basic . ID '=' expr ';'
   95        | basic . var_list ID arr_step '=' arr_init ';'
   96        | basic . var_list ID arr_step ';'
   97        | basic . ID arr_step '=' arr_init ';'
   98        | basic . ID arr_step ';'

    ID  shift, and go to state 20

    var_list  go to state 21


State 9

   30 func_def: void_reduce . ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   33         | void_reduce . ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}'
   36         | void_reduce . ID '(' ')' $@14 '{' $@15 compound_in_argu_func '}'
   54 func_decl: void_reduce . ID '(' argu_list argu ')' $@21 ';'
   56          | void_reduce . ID '(' argu ')' $@22 ';'
   58          | void_reduce . ID '(' ')' $@23 ';'

    ID  shift, and go to state 22


State 10

   13 gvar_all_def: var_def .

    $default  reduce using rule 13 (gvar_all_def)


State 11

   99 var_def: CONST basic . const_list ID '=' liter_const ';'
  100        | CONST basic . ID '=' liter_const ';'

    ID  shift, and go to state 23

    const_list  go to state 24


State 12

    0 $accept: program $end .

    $default  accept


State 13

    1 program: gvar_all_def func_def . prog_content
    2        | gvar_all_def func_def .

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 2 (program)

    prog_content  go to state 25
    func_def      go to state 17
    func_decl     go to state 18
    basic         go to state 8
    void_reduce   go to state 9
    var_def       go to state 19


State 14

   12 gvar_all_def: gvar_all_def func_decl .

    $default  reduce using rule 12 (gvar_all_def)


State 15

   11 gvar_all_def: gvar_all_def var_def .

    $default  reduce using rule 11 (gvar_all_def)


State 16

    3 program: func_def prog_content .
    5 prog_content: prog_content . var_def
    6             | prog_content . func_def
    7             | prog_content . func_decl

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 3 (program)

    func_def     go to state 26
    func_decl    go to state 27
    basic        go to state 8
    void_reduce  go to state 9
    var_def      go to state 28


State 17

    9 prog_content: func_def .

    $default  reduce using rule 9 (prog_content)


State 18

   10 prog_content: func_decl .

    $default  reduce using rule 10 (prog_content)


State 19

    8 prog_content: var_def .

    $default  reduce using rule 8 (prog_content)


State 20

   19 func_def: basic ID . '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   23         | basic ID . '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   27         | basic ID . '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'
   48 func_decl: basic ID . '(' argu_list argu ')' $@18 ';'
   50          | basic ID . '(' argu ')' $@19 ';'
   52          | basic ID . '(' ')' $@20 ';'
   83 var_list: ID . ','
   84         | ID . '=' expr ','
   87         | ID . arr_step '=' arr_init ','
   88         | ID . arr_step ','
   93 var_def: basic ID . ';'
   94        | basic ID . '=' expr ';'
   97        | basic ID . arr_step '=' arr_init ';'
   98        | basic ID . arr_step ';'

    '('  shift, and go to state 29
    ';'  shift, and go to state 30
    ','  shift, and go to state 31
    '['  shift, and go to state 32
    '='  shift, and go to state 33

    arr_step  go to state 34


State 21

   81 var_list: var_list . ID ','
   82         | var_list . ID '=' expr ','
   85         | var_list . ID arr_step '=' arr_init ','
   86         | var_list . ID arr_step ','
   91 var_def: basic var_list . ID ';'
   92        | basic var_list . ID '=' expr ';'
   95        | basic var_list . ID arr_step '=' arr_init ';'
   96        | basic var_list . ID arr_step ';'

    ID  shift, and go to state 35


State 22

   30 func_def: void_reduce ID . '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   33         | void_reduce ID . '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}'
   36         | void_reduce ID . '(' ')' $@14 '{' $@15 compound_in_argu_func '}'
   54 func_decl: void_reduce ID . '(' argu_list argu ')' $@21 ';'
   56          | void_reduce ID . '(' argu ')' $@22 ';'
   58          | void_reduce ID . '(' ')' $@23 ';'

    '('  shift, and go to state 36


State 23

   90 const_list: ID . '=' liter_const ','
  100 var_def: CONST basic ID . '=' liter_const ';'

    '='  shift, and go to state 37


State 24

   89 const_list: const_list . ID '=' liter_const ','
   99 var_def: CONST basic const_list . ID '=' liter_const ';'

    ID  shift, and go to state 38


State 25

    1 program: gvar_all_def func_def prog_content .
    5 prog_content: prog_content . var_def
    6             | prog_content . func_def
    7             | prog_content . func_decl

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 1 (program)

    func_def     go to state 26
    func_decl    go to state 27
    basic        go to state 8
    void_reduce  go to state 9
    var_def      go to state 28


State 26

    6 prog_content: prog_content func_def .

    $default  reduce using rule 6 (prog_content)


State 27

    7 prog_content: prog_content func_decl .

    $default  reduce using rule 7 (prog_content)


State 28

    5 prog_content: prog_content var_def .

    $default  reduce using rule 5 (prog_content)


State 29

   19 func_def: basic ID '(' . argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   23         | basic ID '(' . argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   27         | basic ID '(' . ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'
   48 func_decl: basic ID '(' . argu_list argu ')' $@18 ';'
   50          | basic ID '(' . argu ')' $@19 ';'
   52          | basic ID '(' . ')' $@20 ';'

    BASIC_TYPE  shift, and go to state 2
    ')'         shift, and go to state 39

    argu_list  go to state 40
    argu       go to state 41
    basic      go to state 42


State 30

   93 var_def: basic ID ';' .

    $default  reduce using rule 93 (var_def)


State 31

   83 var_list: ID ',' .

    $default  reduce using rule 83 (var_list)


State 32

  102 arr_step: '[' . INT_CONST ']'

    INT_CONST  shift, and go to state 43


State 33

   84 var_list: ID '=' . expr ','
   94 var_def: basic ID '=' . expr ';'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 57
    arr_ref       go to state 58
    func_invo     go to state 59


State 34

   87 var_list: ID arr_step . '=' arr_init ','
   88         | ID arr_step . ','
   97 var_def: basic ID arr_step . '=' arr_init ';'
   98        | basic ID arr_step . ';'
  101 arr_step: arr_step . '[' INT_CONST ']'

    ';'  shift, and go to state 60
    ','  shift, and go to state 61
    '['  shift, and go to state 62
    '='  shift, and go to state 63


State 35

   81 var_list: var_list ID . ','
   82         | var_list ID . '=' expr ','
   85         | var_list ID . arr_step '=' arr_init ','
   86         | var_list ID . arr_step ','
   91 var_def: basic var_list ID . ';'
   92        | basic var_list ID . '=' expr ';'
   95        | basic var_list ID . arr_step '=' arr_init ';'
   96        | basic var_list ID . arr_step ';'

    ';'  shift, and go to state 64
    ','  shift, and go to state 65
    '['  shift, and go to state 32
    '='  shift, and go to state 66

    arr_step  go to state 67


State 36

   30 func_def: void_reduce ID '(' . argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   33         | void_reduce ID '(' . argu ')' $@12 '{' $@13 compound_in_argu_func '}'
   36         | void_reduce ID '(' . ')' $@14 '{' $@15 compound_in_argu_func '}'
   54 func_decl: void_reduce ID '(' . argu_list argu ')' $@21 ';'
   56          | void_reduce ID '(' . argu ')' $@22 ';'
   58          | void_reduce ID '(' . ')' $@23 ';'

    BASIC_TYPE  shift, and go to state 2
    ')'         shift, and go to state 68

    argu_list  go to state 69
    argu       go to state 70
    basic      go to state 42


State 37

   90 const_list: ID '=' . liter_const ','
  100 var_def: CONST basic ID '=' . liter_const ';'

    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 71

    liter_const   go to state 72
    int_value     go to state 73
    float_value   go to state 74
    bool_value    go to state 75
    string_value  go to state 76


State 38

   89 const_list: const_list ID . '=' liter_const ','
   99 var_def: CONST basic const_list ID . '=' liter_const ';'

    '='  shift, and go to state 77


State 39

   27 func_def: basic ID '(' ')' . $@7 '{' $@8 compound_in_argu_func $@9 '}'
   52 func_decl: basic ID '(' ')' . $@20 ';'

    ';'       reduce using rule 51 ($@20)
    $default  reduce using rule 24 ($@7)

    $@7   go to state 78
    $@20  go to state 79


State 40

   19 func_def: basic ID '(' argu_list . argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   48 func_decl: basic ID '(' argu_list . argu ')' $@18 ';'
   59 argu_list: argu_list . argu ','

    BASIC_TYPE  shift, and go to state 2

    argu   go to state 80
    basic  go to state 42


State 41

   23 func_def: basic ID '(' argu . ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   50 func_decl: basic ID '(' argu . ')' $@19 ';'
   60 argu_list: argu . ','

    ')'  shift, and go to state 81
    ','  shift, and go to state 82


State 42

   61 argu: basic . ID
   62     | basic . ID array_argu_step

    ID  shift, and go to state 83


State 43

  102 arr_step: '[' INT_CONST . ']'

    ']'  shift, and go to state 84


State 44

  125 expr: ID .
  128 arr_ref: ID . arr_ref_step
  131 func_invo: ID . '(' expr_list expr ')'
  132          | ID . '(' expr ')'
  133          | ID . '(' ')'

    '('  shift, and go to state 85
    '['  shift, and go to state 86

    $default  reduce using rule 125 (expr)

    arr_ref_step  go to state 87


State 45

   77 int_value: INT_CONST .

    $default  reduce using rule 77 (int_value)


State 46

   78 float_value: FLOAT_CONST .

    $default  reduce using rule 78 (float_value)


State 47

   79 bool_value: BOOL_CONST .

    $default  reduce using rule 79 (bool_value)


State 48

   80 string_value: STRING_CONST .

    $default  reduce using rule 80 (string_value)


State 49

  120 expr: '-' . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 88
    arr_ref       go to state 58
    func_invo     go to state 59


State 50

  119 expr: '(' . expr ')'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 89
    arr_ref       go to state 58
    func_invo     go to state 59


State 51

  123 expr: '!' . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 90
    arr_ref       go to state 58
    func_invo     go to state 59


State 52

  124 expr: value_type .

    $default  reduce using rule 124 (expr)


State 53

   73 value_type: int_value .

    $default  reduce using rule 73 (value_type)


State 54

   74 value_type: float_value .

    $default  reduce using rule 74 (value_type)


State 55

   75 value_type: bool_value .

    $default  reduce using rule 75 (value_type)


State 56

   76 value_type: string_value .

    $default  reduce using rule 76 (value_type)


State 57

   84 var_list: ID '=' expr . ','
   94 var_def: basic ID '=' expr . ';'
  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ';'  shift, and go to state 104
    ','  shift, and go to state 105


State 58

  127 expr: arr_ref .

    $default  reduce using rule 127 (expr)


State 59

  126 expr: func_invo .

    $default  reduce using rule 126 (expr)


State 60

   98 var_def: basic ID arr_step ';' .

    $default  reduce using rule 98 (var_def)


State 61

   88 var_list: ID arr_step ',' .

    $default  reduce using rule 88 (var_list)


State 62

  101 arr_step: arr_step '[' . INT_CONST ']'

    INT_CONST  shift, and go to state 106


State 63

   87 var_list: ID arr_step '=' . arr_init ','
   97 var_def: basic ID arr_step '=' . arr_init ';'

    '{'  shift, and go to state 107

    arr_init  go to state 108


State 64

   91 var_def: basic var_list ID ';' .

    $default  reduce using rule 91 (var_def)


State 65

   81 var_list: var_list ID ',' .

    $default  reduce using rule 81 (var_list)


State 66

   82 var_list: var_list ID '=' . expr ','
   92 var_def: basic var_list ID '=' . expr ';'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 109
    arr_ref       go to state 58
    func_invo     go to state 59


State 67

   85 var_list: var_list ID arr_step . '=' arr_init ','
   86         | var_list ID arr_step . ','
   95 var_def: basic var_list ID arr_step . '=' arr_init ';'
   96        | basic var_list ID arr_step . ';'
  101 arr_step: arr_step . '[' INT_CONST ']'

    ';'  shift, and go to state 110
    ','  shift, and go to state 111
    '['  shift, and go to state 62
    '='  shift, and go to state 112


State 68

   36 func_def: void_reduce ID '(' ')' . $@14 '{' $@15 compound_in_argu_func '}'
   58 func_decl: void_reduce ID '(' ')' . $@23 ';'

    ';'       reduce using rule 57 ($@23)
    $default  reduce using rule 34 ($@14)

    $@14  go to state 113
    $@23  go to state 114


State 69

   30 func_def: void_reduce ID '(' argu_list . argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   54 func_decl: void_reduce ID '(' argu_list . argu ')' $@21 ';'
   59 argu_list: argu_list . argu ','

    BASIC_TYPE  shift, and go to state 2

    argu   go to state 115
    basic  go to state 42


State 70

   33 func_def: void_reduce ID '(' argu . ')' $@12 '{' $@13 compound_in_argu_func '}'
   56 func_decl: void_reduce ID '(' argu . ')' $@22 ';'
   60 argu_list: argu . ','

    ')'  shift, and go to state 116
    ','  shift, and go to state 82


State 71

   68 liter_const: '-' . int_value
   70            | '-' . float_value

    INT_CONST    shift, and go to state 45
    FLOAT_CONST  shift, and go to state 46

    int_value    go to state 117
    float_value  go to state 118


State 72

   90 const_list: ID '=' liter_const . ','
  100 var_def: CONST basic ID '=' liter_const . ';'

    ';'  shift, and go to state 119
    ','  shift, and go to state 120


State 73

   67 liter_const: int_value .

    $default  reduce using rule 67 (liter_const)


State 74

   69 liter_const: float_value .

    $default  reduce using rule 69 (liter_const)


State 75

   71 liter_const: bool_value .

    $default  reduce using rule 71 (liter_const)


State 76

   72 liter_const: string_value .

    $default  reduce using rule 72 (liter_const)


State 77

   89 const_list: const_list ID '=' . liter_const ','
   99 var_def: CONST basic const_list ID '=' . liter_const ';'

    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 71

    liter_const   go to state 121
    int_value     go to state 73
    float_value   go to state 74
    bool_value    go to state 75
    string_value  go to state 76


State 78

   27 func_def: basic ID '(' ')' $@7 . '{' $@8 compound_in_argu_func $@9 '}'

    '{'  shift, and go to state 122


State 79

   52 func_decl: basic ID '(' ')' $@20 . ';'

    ';'  shift, and go to state 123


State 80

   19 func_def: basic ID '(' argu_list argu . ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   48 func_decl: basic ID '(' argu_list argu . ')' $@18 ';'
   59 argu_list: argu_list argu . ','

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


State 81

   23 func_def: basic ID '(' argu ')' . $@4 '{' $@5 compound_in_argu_func $@6 '}'
   50 func_decl: basic ID '(' argu ')' . $@19 ';'

    ';'       reduce using rule 49 ($@19)
    $default  reduce using rule 20 ($@4)

    $@4   go to state 126
    $@19  go to state 127


State 82

   60 argu_list: argu ',' .

    $default  reduce using rule 60 (argu_list)


State 83

   61 argu: basic ID .
   62     | basic ID . array_argu_step

    '['  shift, and go to state 128

    $default  reduce using rule 61 (argu)

    array_argu_step  go to state 129


State 84

  102 arr_step: '[' INT_CONST ']' .

    $default  reduce using rule 102 (arr_step)


State 85

  131 func_invo: ID '(' . expr_list expr ')'
  132          | ID '(' . expr ')'
  133          | ID '(' . ')'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    ')'           shift, and go to state 130
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 131
    arr_ref       go to state 58
    func_invo     go to state 59
    expr_list     go to state 132


State 86

  130 arr_ref_step: '[' . expr ']'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 133
    arr_ref       go to state 58
    func_invo     go to state 59


State 87

  128 arr_ref: ID arr_ref_step .
  129 arr_ref_step: arr_ref_step . '[' expr ']'

    '['  shift, and go to state 134

    $default  reduce using rule 128 (arr_ref)


State 88

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  120     | '-' expr .
  121     | expr . AND expr
  122     | expr . OR expr

    $default  reduce using rule 120 (expr)


State 89

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  119     | '(' expr . ')'
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ')'  shift, and go to state 135


State 90

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  123     | '!' expr .

    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 123 (expr)


State 91

  122 expr: expr OR . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 136
    arr_ref       go to state 58
    func_invo     go to state 59


State 92

  121 expr: expr AND . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 137
    arr_ref       go to state 58
    func_invo     go to state 59


State 93

  114 expr: expr LE . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 138
    arr_ref       go to state 58
    func_invo     go to state 59


State 94

  117 expr: expr EQ . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 139
    arr_ref       go to state 58
    func_invo     go to state 59


State 95

  116 expr: expr GE . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 140
    arr_ref       go to state 58
    func_invo     go to state 59


State 96

  118 expr: expr NE . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 141
    arr_ref       go to state 58
    func_invo     go to state 59


State 97

  113 expr: expr '<' . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 142
    arr_ref       go to state 58
    func_invo     go to state 59


State 98

  115 expr: expr '>' . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 143
    arr_ref       go to state 58
    func_invo     go to state 59


State 99

  110 expr: expr '+' . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 144
    arr_ref       go to state 58
    func_invo     go to state 59


State 100

  111 expr: expr '-' . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 145
    arr_ref       go to state 58
    func_invo     go to state 59


State 101

  108 expr: expr '*' . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 146
    arr_ref       go to state 58
    func_invo     go to state 59


State 102

  109 expr: expr '/' . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 147
    arr_ref       go to state 58
    func_invo     go to state 59


State 103

  112 expr: expr '%' . expr

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 148
    arr_ref       go to state 58
    func_invo     go to state 59


State 104

   94 var_def: basic ID '=' expr ';' .

    $default  reduce using rule 94 (var_def)


State 105

   84 var_list: ID '=' expr ',' .

    $default  reduce using rule 84 (var_list)


State 106

  101 arr_step: arr_step '[' INT_CONST . ']'

    ']'  shift, and go to state 149


State 107

  103 arr_init: '{' . arr_argu_list expr '}'
  104         | '{' . expr '}'
  105         | '{' . '}'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '}'           shift, and go to state 150
    '!'           shift, and go to state 51

    value_type     go to state 52
    int_value      go to state 53
    float_value    go to state 54
    bool_value     go to state 55
    string_value   go to state 56
    arr_argu_list  go to state 151
    expr           go to state 152
    arr_ref        go to state 58
    func_invo      go to state 59


State 108

   87 var_list: ID arr_step '=' arr_init . ','
   97 var_def: basic ID arr_step '=' arr_init . ';'

    ';'  shift, and go to state 153
    ','  shift, and go to state 154


State 109

   82 var_list: var_list ID '=' expr . ','
   92 var_def: basic var_list ID '=' expr . ';'
  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ';'  shift, and go to state 155
    ','  shift, and go to state 156


State 110

   96 var_def: basic var_list ID arr_step ';' .

    $default  reduce using rule 96 (var_def)


State 111

   86 var_list: var_list ID arr_step ',' .

    $default  reduce using rule 86 (var_list)


State 112

   85 var_list: var_list ID arr_step '=' . arr_init ','
   95 var_def: basic var_list ID arr_step '=' . arr_init ';'

    '{'  shift, and go to state 107

    arr_init  go to state 157


State 113

   36 func_def: void_reduce ID '(' ')' $@14 . '{' $@15 compound_in_argu_func '}'

    '{'  shift, and go to state 158


State 114

   58 func_decl: void_reduce ID '(' ')' $@23 . ';'

    ';'  shift, and go to state 159


State 115

   30 func_def: void_reduce ID '(' argu_list argu . ')' $@10 '{' $@11 compound_in_argu_func '}'
   54 func_decl: void_reduce ID '(' argu_list argu . ')' $@21 ';'
   59 argu_list: argu_list argu . ','

    ')'  shift, and go to state 160
    ','  shift, and go to state 125


State 116

   33 func_def: void_reduce ID '(' argu ')' . $@12 '{' $@13 compound_in_argu_func '}'
   56 func_decl: void_reduce ID '(' argu ')' . $@22 ';'

    ';'       reduce using rule 55 ($@22)
    $default  reduce using rule 31 ($@12)

    $@12  go to state 161
    $@22  go to state 162


State 117

   68 liter_const: '-' int_value .

    $default  reduce using rule 68 (liter_const)


State 118

   70 liter_const: '-' float_value .

    $default  reduce using rule 70 (liter_const)


State 119

  100 var_def: CONST basic ID '=' liter_const ';' .

    $default  reduce using rule 100 (var_def)


State 120

   90 const_list: ID '=' liter_const ',' .

    $default  reduce using rule 90 (const_list)


State 121

   89 const_list: const_list ID '=' liter_const . ','
   99 var_def: CONST basic const_list ID '=' liter_const . ';'

    ';'  shift, and go to state 163
    ','  shift, and go to state 164


State 122

   27 func_def: basic ID '(' ')' $@7 '{' . $@8 compound_in_argu_func $@9 '}'

    $default  reduce using rule 25 ($@8)

    $@8  go to state 165


State 123

   52 func_decl: basic ID '(' ')' $@20 ';' .

    $default  reduce using rule 52 (func_decl)


State 124

   19 func_def: basic ID '(' argu_list argu ')' . $@1 '{' $@2 compound_in_argu_func $@3 '}'
   48 func_decl: basic ID '(' argu_list argu ')' . $@18 ';'

    ';'       reduce using rule 47 ($@18)
    $default  reduce using rule 16 ($@1)

    $@1   go to state 166
    $@18  go to state 167


State 125

   59 argu_list: argu_list argu ',' .

    $default  reduce using rule 59 (argu_list)


State 126

   23 func_def: basic ID '(' argu ')' $@4 . '{' $@5 compound_in_argu_func $@6 '}'

    '{'  shift, and go to state 168


State 127

   50 func_decl: basic ID '(' argu ')' $@19 . ';'

    ';'  shift, and go to state 169


State 128

   64 array_argu_step: '[' . INT_CONST ']'

    INT_CONST  shift, and go to state 170


State 129

   62 argu: basic ID array_argu_step .
   63 array_argu_step: array_argu_step . '[' INT_CONST ']'

    '['  shift, and go to state 171

    $default  reduce using rule 62 (argu)


State 130

  133 func_invo: ID '(' ')' .

    $default  reduce using rule 133 (func_invo)


State 131

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  132 func_invo: ID '(' expr . ')'
  135 expr_list: expr . ','

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ')'  shift, and go to state 172
    ','  shift, and go to state 173


State 132

  131 func_invo: ID '(' expr_list . expr ')'
  134 expr_list: expr_list . expr ','

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 174
    arr_ref       go to state 58
    func_invo     go to state 59


State 133

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  130 arr_ref_step: '[' expr . ']'

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ']'  shift, and go to state 175


State 134

  129 arr_ref_step: arr_ref_step '[' . expr ']'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 176
    arr_ref       go to state 58
    func_invo     go to state 59


State 135

  119 expr: '(' expr ')' .

    $default  reduce using rule 119 (expr)


State 136

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  122     | expr OR expr .

    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 122 (expr)


State 137

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  121     | expr AND expr .
  122     | expr . OR expr

    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 121 (expr)


State 138

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  114     | expr LE expr .
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 114 (expr)


State 139

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  117     | expr EQ expr .
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 117 (expr)


State 140

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  116     | expr GE expr .
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 116 (expr)


State 141

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  118     | expr NE expr .
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 118 (expr)


State 142

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  113     | expr '<' expr .
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 113 (expr)


State 143

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  115     | expr '>' expr .
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 115 (expr)


State 144

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  110     | expr '+' expr .
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 110 (expr)


State 145

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  111     | expr '-' expr .
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 111 (expr)


State 146

  108 expr: expr . '*' expr
  108     | expr '*' expr .
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    $default  reduce using rule 108 (expr)


State 147

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  109     | expr '/' expr .
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    $default  reduce using rule 109 (expr)


State 148

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  112     | expr '%' expr .
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    $default  reduce using rule 112 (expr)


State 149

  101 arr_step: arr_step '[' INT_CONST ']' .

    $default  reduce using rule 101 (arr_step)


State 150

  105 arr_init: '{' '}' .

    $default  reduce using rule 105 (arr_init)


State 151

  103 arr_init: '{' arr_argu_list . expr '}'
  106 arr_argu_list: arr_argu_list . expr ','

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 177
    arr_ref       go to state 58
    func_invo     go to state 59


State 152

  104 arr_init: '{' expr . '}'
  107 arr_argu_list: expr . ','
  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '}'  shift, and go to state 178
    ','  shift, and go to state 179


State 153

   97 var_def: basic ID arr_step '=' arr_init ';' .

    $default  reduce using rule 97 (var_def)


State 154

   87 var_list: ID arr_step '=' arr_init ',' .

    $default  reduce using rule 87 (var_list)


State 155

   92 var_def: basic var_list ID '=' expr ';' .

    $default  reduce using rule 92 (var_def)


State 156

   82 var_list: var_list ID '=' expr ',' .

    $default  reduce using rule 82 (var_list)


State 157

   85 var_list: var_list ID arr_step '=' arr_init . ','
   95 var_def: basic var_list ID arr_step '=' arr_init . ';'

    ';'  shift, and go to state 180
    ','  shift, and go to state 181


State 158

   36 func_def: void_reduce ID '(' ')' $@14 '{' . $@15 compound_in_argu_func '}'

    $default  reduce using rule 35 ($@15)

    $@15  go to state 182


State 159

   58 func_decl: void_reduce ID '(' ')' $@23 ';' .

    $default  reduce using rule 58 (func_decl)


State 160

   30 func_def: void_reduce ID '(' argu_list argu ')' . $@10 '{' $@11 compound_in_argu_func '}'
   54 func_decl: void_reduce ID '(' argu_list argu ')' . $@21 ';'

    ';'       reduce using rule 53 ($@21)
    $default  reduce using rule 28 ($@10)

    $@10  go to state 183
    $@21  go to state 184


State 161

   33 func_def: void_reduce ID '(' argu ')' $@12 . '{' $@13 compound_in_argu_func '}'

    '{'  shift, and go to state 185


State 162

   56 func_decl: void_reduce ID '(' argu ')' $@22 . ';'

    ';'  shift, and go to state 186


State 163

   99 var_def: CONST basic const_list ID '=' liter_const ';' .

    $default  reduce using rule 99 (var_def)


State 164

   89 const_list: const_list ID '=' liter_const ',' .

    $default  reduce using rule 89 (const_list)


State 165

   27 func_def: basic ID '(' ')' $@7 '{' $@8 . compound_in_argu_func $@9 '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 187
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    READ          shift, and go to state 188
    PRINT         shift, and go to state 189
    IF            shift, and go to state 190
    DO            shift, and go to state 191
    WHILE         shift, and go to state 192
    FOR           shift, and go to state 193
    CONTINUE      shift, and go to state 194
    BREAK         shift, and go to state 195
    RETURN        shift, and go to state 196
    CONST         shift, and go to state 3
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 197
    '!'           shift, and go to state 51

    $default  reduce using rule 42 (compound_in_argu_func)

    var_all_def            go to state 198
    compound               go to state 199
    compound_in_argu_func  go to state 200
    compound_list          go to state 201
    basic                  go to state 202
    value_type             go to state 52
    int_value              go to state 53
    float_value            go to state 54
    bool_value             go to state 55
    string_value           go to state 56
    var_def                go to state 203
    expr                   go to state 204
    arr_ref                go to state 205
    func_invo              go to state 59
    statement              go to state 206
    simple_stat            go to state 207
    var_ref                go to state 208
    condition              go to state 209
    while_stat             go to state 210
    for_stat               go to state 211
    jump_stat              go to state 212


State 166

   19 func_def: basic ID '(' argu_list argu ')' $@1 . '{' $@2 compound_in_argu_func $@3 '}'

    '{'  shift, and go to state 213


State 167

   48 func_decl: basic ID '(' argu_list argu ')' $@18 . ';'

    ';'  shift, and go to state 214


State 168

   23 func_def: basic ID '(' argu ')' $@4 '{' . $@5 compound_in_argu_func $@6 '}'

    $default  reduce using rule 21 ($@5)

    $@5  go to state 215


State 169

   50 func_decl: basic ID '(' argu ')' $@19 ';' .

    $default  reduce using rule 50 (func_decl)


State 170

   64 array_argu_step: '[' INT_CONST . ']'

    ']'  shift, and go to state 216


State 171

   63 array_argu_step: array_argu_step '[' . INT_CONST ']'

    INT_CONST  shift, and go to state 217


State 172

  132 func_invo: ID '(' expr ')' .

    $default  reduce using rule 132 (func_invo)


State 173

  135 expr_list: expr ',' .

    $default  reduce using rule 135 (expr_list)


State 174

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  131 func_invo: ID '(' expr_list expr . ')'
  134 expr_list: expr_list expr . ','

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ')'  shift, and go to state 218
    ','  shift, and go to state 219


State 175

  130 arr_ref_step: '[' expr ']' .

    $default  reduce using rule 130 (arr_ref_step)


State 176

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  129 arr_ref_step: arr_ref_step '[' expr . ']'

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ']'  shift, and go to state 220


State 177

  103 arr_init: '{' arr_argu_list expr . '}'
  106 arr_argu_list: arr_argu_list expr . ','
  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '}'  shift, and go to state 221
    ','  shift, and go to state 222


State 178

  104 arr_init: '{' expr '}' .

    $default  reduce using rule 104 (arr_init)


State 179

  107 arr_argu_list: expr ',' .

    $default  reduce using rule 107 (arr_argu_list)


State 180

   95 var_def: basic var_list ID arr_step '=' arr_init ';' .

    $default  reduce using rule 95 (var_def)


State 181

   85 var_list: var_list ID arr_step '=' arr_init ',' .

    $default  reduce using rule 85 (var_list)


State 182

   36 func_def: void_reduce ID '(' ')' $@14 '{' $@15 . compound_in_argu_func '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 187
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    READ          shift, and go to state 188
    PRINT         shift, and go to state 189
    IF            shift, and go to state 190
    DO            shift, and go to state 191
    WHILE         shift, and go to state 192
    FOR           shift, and go to state 193
    CONTINUE      shift, and go to state 194
    BREAK         shift, and go to state 195
    RETURN        shift, and go to state 196
    CONST         shift, and go to state 3
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 197
    '!'           shift, and go to state 51

    $default  reduce using rule 42 (compound_in_argu_func)

    var_all_def            go to state 198
    compound               go to state 199
    compound_in_argu_func  go to state 223
    compound_list          go to state 201
    basic                  go to state 202
    value_type             go to state 52
    int_value              go to state 53
    float_value            go to state 54
    bool_value             go to state 55
    string_value           go to state 56
    var_def                go to state 203
    expr                   go to state 204
    arr_ref                go to state 205
    func_invo              go to state 59
    statement              go to state 206
    simple_stat            go to state 207
    var_ref                go to state 208
    condition              go to state 209
    while_stat             go to state 210
    for_stat               go to state 211
    jump_stat              go to state 212


State 183

   30 func_def: void_reduce ID '(' argu_list argu ')' $@10 . '{' $@11 compound_in_argu_func '}'

    '{'  shift, and go to state 224


State 184

   54 func_decl: void_reduce ID '(' argu_list argu ')' $@21 . ';'

    ';'  shift, and go to state 225


State 185

   33 func_def: void_reduce ID '(' argu ')' $@12 '{' . $@13 compound_in_argu_func '}'

    $default  reduce using rule 32 ($@13)

    $@13  go to state 226


State 186

   56 func_decl: void_reduce ID '(' argu ')' $@22 ';' .

    $default  reduce using rule 56 (func_decl)


State 187

  125 expr: ID .
  128 arr_ref: ID . arr_ref_step
  131 func_invo: ID . '(' expr_list expr ')'
  132          | ID . '(' expr ')'
  133          | ID . '(' ')'
  146 var_ref: ID .

    '('  shift, and go to state 85
    '['  shift, and go to state 86

    '='       reduce using rule 146 (var_ref)
    $default  reduce using rule 125 (expr)

    arr_ref_step  go to state 87


State 188

  145 simple_stat: READ . var_ref ';'

    ID  shift, and go to state 227

    arr_ref  go to state 228
    var_ref  go to state 229


State 189

  144 simple_stat: PRINT . expr ';'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 230
    arr_ref       go to state 58
    func_invo     go to state 59


State 190

  148 condition: IF . '(' bool_expr ')' compound
  149          | IF . '(' bool_expr ')' compound ELSE compound

    '('  shift, and go to state 231


State 191

  155 while_stat: DO . $@25 compound $@26 WHILE '(' bool_expr ')' ';'

    $default  reduce using rule 153 ($@25)

    $@25  go to state 232


State 192

  152 while_stat: WHILE . '(' bool_expr ')' $@24 compound

    '('  shift, and go to state 233


State 193

  157 for_stat: FOR . '(' init_expr ';' bool_expr ';' incr_expr ')' $@27 compound
  159         | FOR . '(' init_expr ';' ';' incr_expr ')' $@28 compound

    '('  shift, and go to state 234


State 194

  181 jump_stat: CONTINUE . ';'

    ';'  shift, and go to state 235


State 195

  180 jump_stat: BREAK . ';'

    ';'  shift, and go to state 236


State 196

  178 jump_stat: RETURN . ';'
  179          | RETURN . expr ';'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    ';'           shift, and go to state 237
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 238
    arr_ref       go to state 58
    func_invo     go to state 59


State 197

   38 compound: '{' . $@16 compound_list '}'
   40         | '{' . $@17 '}'

    '}'       reduce using rule 39 ($@17)
    $default  reduce using rule 37 ($@16)

    $@16  go to state 239
    $@17  go to state 240


State 198

   46 compound_list: var_all_def .

    $default  reduce using rule 46 (compound_list)


State 199

  136 statement: compound .

    $default  reduce using rule 136 (statement)


State 200

   27 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func . $@9 '}'

    $default  reduce using rule 26 ($@9)

    $@9  go to state 241


State 201

   41 compound_in_argu_func: compound_list .
   43 compound_list: compound_list . var_all_def
   44              | compound_list . statement

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 187
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    READ          shift, and go to state 188
    PRINT         shift, and go to state 189
    IF            shift, and go to state 190
    DO            shift, and go to state 191
    WHILE         shift, and go to state 192
    FOR           shift, and go to state 193
    CONTINUE      shift, and go to state 194
    BREAK         shift, and go to state 195
    RETURN        shift, and go to state 196
    CONST         shift, and go to state 3
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 197
    '!'           shift, and go to state 51

    $default  reduce using rule 41 (compound_in_argu_func)

    var_all_def   go to state 242
    compound      go to state 199
    basic         go to state 202
    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    var_def       go to state 203
    expr          go to state 204
    arr_ref       go to state 205
    func_invo     go to state 59
    statement     go to state 243
    simple_stat   go to state 207
    var_ref       go to state 208
    condition     go to state 209
    while_stat    go to state 210
    for_stat      go to state 211
    jump_stat     go to state 212


State 202

   91 var_def: basic . var_list ID ';'
   92        | basic . var_list ID '=' expr ';'
   93        | basic . ID ';'
   94        | basic . ID '=' expr ';'
   95        | basic . var_list ID arr_step '=' arr_init ';'
   96        | basic . var_list ID arr_step ';'
   97        | basic . ID arr_step '=' arr_init ';'
   98        | basic . ID arr_step ';'

    ID  shift, and go to state 244

    var_list  go to state 21


State 203

   15 var_all_def: var_def .

    $default  reduce using rule 15 (var_all_def)


State 204

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  142 statement: expr . ';'

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ';'  shift, and go to state 245


State 205

  127 expr: arr_ref .
  147 var_ref: arr_ref .

    '='       reduce using rule 147 (var_ref)
    $default  reduce using rule 127 (expr)


State 206

   45 compound_list: statement .

    $default  reduce using rule 45 (compound_list)


State 207

  137 statement: simple_stat .

    $default  reduce using rule 137 (statement)


State 208

  143 simple_stat: var_ref . '=' expr ';'

    '='  shift, and go to state 246


State 209

  138 statement: condition .

    $default  reduce using rule 138 (statement)


State 210

  139 statement: while_stat .

    $default  reduce using rule 139 (statement)


State 211

  140 statement: for_stat .

    $default  reduce using rule 140 (statement)


State 212

  141 statement: jump_stat .

    $default  reduce using rule 141 (statement)


State 213

   19 func_def: basic ID '(' argu_list argu ')' $@1 '{' . $@2 compound_in_argu_func $@3 '}'

    $default  reduce using rule 17 ($@2)

    $@2  go to state 247


State 214

   48 func_decl: basic ID '(' argu_list argu ')' $@18 ';' .

    $default  reduce using rule 48 (func_decl)


State 215

   23 func_def: basic ID '(' argu ')' $@4 '{' $@5 . compound_in_argu_func $@6 '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 187
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    READ          shift, and go to state 188
    PRINT         shift, and go to state 189
    IF            shift, and go to state 190
    DO            shift, and go to state 191
    WHILE         shift, and go to state 192
    FOR           shift, and go to state 193
    CONTINUE      shift, and go to state 194
    BREAK         shift, and go to state 195
    RETURN        shift, and go to state 196
    CONST         shift, and go to state 3
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 197
    '!'           shift, and go to state 51

    $default  reduce using rule 42 (compound_in_argu_func)

    var_all_def            go to state 198
    compound               go to state 199
    compound_in_argu_func  go to state 248
    compound_list          go to state 201
    basic                  go to state 202
    value_type             go to state 52
    int_value              go to state 53
    float_value            go to state 54
    bool_value             go to state 55
    string_value           go to state 56
    var_def                go to state 203
    expr                   go to state 204
    arr_ref                go to state 205
    func_invo              go to state 59
    statement              go to state 206
    simple_stat            go to state 207
    var_ref                go to state 208
    condition              go to state 209
    while_stat             go to state 210
    for_stat               go to state 211
    jump_stat              go to state 212


State 216

   64 array_argu_step: '[' INT_CONST ']' .

    $default  reduce using rule 64 (array_argu_step)


State 217

   63 array_argu_step: array_argu_step '[' INT_CONST . ']'

    ']'  shift, and go to state 249


State 218

  131 func_invo: ID '(' expr_list expr ')' .

    $default  reduce using rule 131 (func_invo)


State 219

  134 expr_list: expr_list expr ',' .

    $default  reduce using rule 134 (expr_list)


State 220

  129 arr_ref_step: arr_ref_step '[' expr ']' .

    $default  reduce using rule 129 (arr_ref_step)


State 221

  103 arr_init: '{' arr_argu_list expr '}' .

    $default  reduce using rule 103 (arr_init)


State 222

  106 arr_argu_list: arr_argu_list expr ',' .

    $default  reduce using rule 106 (arr_argu_list)


State 223

   36 func_def: void_reduce ID '(' ')' $@14 '{' $@15 compound_in_argu_func . '}'

    '}'  shift, and go to state 250


State 224

   30 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' . $@11 compound_in_argu_func '}'

    $default  reduce using rule 29 ($@11)

    $@11  go to state 251


State 225

   54 func_decl: void_reduce ID '(' argu_list argu ')' $@21 ';' .

    $default  reduce using rule 54 (func_decl)


State 226

   33 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 . compound_in_argu_func '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 187
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    READ          shift, and go to state 188
    PRINT         shift, and go to state 189
    IF            shift, and go to state 190
    DO            shift, and go to state 191
    WHILE         shift, and go to state 192
    FOR           shift, and go to state 193
    CONTINUE      shift, and go to state 194
    BREAK         shift, and go to state 195
    RETURN        shift, and go to state 196
    CONST         shift, and go to state 3
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 197
    '!'           shift, and go to state 51

    $default  reduce using rule 42 (compound_in_argu_func)

    var_all_def            go to state 198
    compound               go to state 199
    compound_in_argu_func  go to state 252
    compound_list          go to state 201
    basic                  go to state 202
    value_type             go to state 52
    int_value              go to state 53
    float_value            go to state 54
    bool_value             go to state 55
    string_value           go to state 56
    var_def                go to state 203
    expr                   go to state 204
    arr_ref                go to state 205
    func_invo              go to state 59
    statement              go to state 206
    simple_stat            go to state 207
    var_ref                go to state 208
    condition              go to state 209
    while_stat             go to state 210
    for_stat               go to state 211
    jump_stat              go to state 212


State 227

  128 arr_ref: ID . arr_ref_step
  146 var_ref: ID .

    '['  shift, and go to state 86

    $default  reduce using rule 146 (var_ref)

    arr_ref_step  go to state 87


State 228

  147 var_ref: arr_ref .

    $default  reduce using rule 147 (var_ref)


State 229

  145 simple_stat: READ var_ref . ';'

    ';'  shift, and go to state 253


State 230

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  144 simple_stat: PRINT expr . ';'

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ';'  shift, and go to state 254


State 231

  148 condition: IF '(' . bool_expr ')' compound
  149          | IF '(' . bool_expr ')' compound ELSE compound

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 255
    arr_ref       go to state 58
    func_invo     go to state 59
    bool_expr     go to state 256


State 232

  155 while_stat: DO $@25 . compound $@26 WHILE '(' bool_expr ')' ';'

    '{'  shift, and go to state 197

    compound  go to state 257


State 233

  152 while_stat: WHILE '(' . bool_expr ')' $@24 compound

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 255
    arr_ref       go to state 58
    func_invo     go to state 59
    bool_expr     go to state 258


State 234

  157 for_stat: FOR '(' . init_expr ';' bool_expr ';' incr_expr ')' $@27 compound
  159         | FOR '(' . init_expr ';' ';' incr_expr ')' $@28 compound

    ID  shift, and go to state 259

    $default  reduce using rule 164 (init_expr)

    arr_ref         go to state 228
    func_invo       go to state 260
    var_ref         go to state 261
    init_expr       go to state 262
    init_expr_list  go to state 263


State 235

  181 jump_stat: CONTINUE ';' .

    $default  reduce using rule 181 (jump_stat)


State 236

  180 jump_stat: BREAK ';' .

    $default  reduce using rule 180 (jump_stat)


State 237

  178 jump_stat: RETURN ';' .

    $default  reduce using rule 178 (jump_stat)


State 238

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  179 jump_stat: RETURN expr . ';'

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ';'  shift, and go to state 264


State 239

   38 compound: '{' $@16 . compound_list '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 187
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    READ          shift, and go to state 188
    PRINT         shift, and go to state 189
    IF            shift, and go to state 190
    DO            shift, and go to state 191
    WHILE         shift, and go to state 192
    FOR           shift, and go to state 193
    CONTINUE      shift, and go to state 194
    BREAK         shift, and go to state 195
    RETURN        shift, and go to state 196
    CONST         shift, and go to state 3
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 197
    '!'           shift, and go to state 51

    var_all_def    go to state 198
    compound       go to state 199
    compound_list  go to state 265
    basic          go to state 202
    value_type     go to state 52
    int_value      go to state 53
    float_value    go to state 54
    bool_value     go to state 55
    string_value   go to state 56
    var_def        go to state 203
    expr           go to state 204
    arr_ref        go to state 205
    func_invo      go to state 59
    statement      go to state 206
    simple_stat    go to state 207
    var_ref        go to state 208
    condition      go to state 209
    while_stat     go to state 210
    for_stat       go to state 211
    jump_stat      go to state 212


State 240

   40 compound: '{' $@17 . '}'

    '}'  shift, and go to state 266


State 241

   27 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 . '}'

    '}'  shift, and go to state 267


State 242

   43 compound_list: compound_list var_all_def .

    $default  reduce using rule 43 (compound_list)


State 243

   44 compound_list: compound_list statement .

    $default  reduce using rule 44 (compound_list)


State 244

   83 var_list: ID . ','
   84         | ID . '=' expr ','
   87         | ID . arr_step '=' arr_init ','
   88         | ID . arr_step ','
   93 var_def: basic ID . ';'
   94        | basic ID . '=' expr ';'
   97        | basic ID . arr_step '=' arr_init ';'
   98        | basic ID . arr_step ';'

    ';'  shift, and go to state 30
    ','  shift, and go to state 31
    '['  shift, and go to state 32
    '='  shift, and go to state 33

    arr_step  go to state 34


State 245

  142 statement: expr ';' .

    $default  reduce using rule 142 (statement)


State 246

  143 simple_stat: var_ref '=' . expr ';'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 268
    arr_ref       go to state 58
    func_invo     go to state 59


State 247

   19 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 . compound_in_argu_func $@3 '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 187
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    READ          shift, and go to state 188
    PRINT         shift, and go to state 189
    IF            shift, and go to state 190
    DO            shift, and go to state 191
    WHILE         shift, and go to state 192
    FOR           shift, and go to state 193
    CONTINUE      shift, and go to state 194
    BREAK         shift, and go to state 195
    RETURN        shift, and go to state 196
    CONST         shift, and go to state 3
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 197
    '!'           shift, and go to state 51

    $default  reduce using rule 42 (compound_in_argu_func)

    var_all_def            go to state 198
    compound               go to state 199
    compound_in_argu_func  go to state 269
    compound_list          go to state 201
    basic                  go to state 202
    value_type             go to state 52
    int_value              go to state 53
    float_value            go to state 54
    bool_value             go to state 55
    string_value           go to state 56
    var_def                go to state 203
    expr                   go to state 204
    arr_ref                go to state 205
    func_invo              go to state 59
    statement              go to state 206
    simple_stat            go to state 207
    var_ref                go to state 208
    condition              go to state 209
    while_stat             go to state 210
    for_stat               go to state 211
    jump_stat              go to state 212


State 248

   23 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func . $@6 '}'

    $default  reduce using rule 22 ($@6)

    $@6  go to state 270


State 249

   63 array_argu_step: array_argu_step '[' INT_CONST ']' .

    $default  reduce using rule 63 (array_argu_step)


State 250

   36 func_def: void_reduce ID '(' ')' $@14 '{' $@15 compound_in_argu_func '}' .

    $default  reduce using rule 36 (func_def)


State 251

   30 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 . compound_in_argu_func '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 187
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    READ          shift, and go to state 188
    PRINT         shift, and go to state 189
    IF            shift, and go to state 190
    DO            shift, and go to state 191
    WHILE         shift, and go to state 192
    FOR           shift, and go to state 193
    CONTINUE      shift, and go to state 194
    BREAK         shift, and go to state 195
    RETURN        shift, and go to state 196
    CONST         shift, and go to state 3
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 197
    '!'           shift, and go to state 51

    $default  reduce using rule 42 (compound_in_argu_func)

    var_all_def            go to state 198
    compound               go to state 199
    compound_in_argu_func  go to state 271
    compound_list          go to state 201
    basic                  go to state 202
    value_type             go to state 52
    int_value              go to state 53
    float_value            go to state 54
    bool_value             go to state 55
    string_value           go to state 56
    var_def                go to state 203
    expr                   go to state 204
    arr_ref                go to state 205
    func_invo              go to state 59
    statement              go to state 206
    simple_stat            go to state 207
    var_ref                go to state 208
    condition              go to state 209
    while_stat             go to state 210
    for_stat               go to state 211
    jump_stat              go to state 212


State 252

   33 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func . '}'

    '}'  shift, and go to state 272


State 253

  145 simple_stat: READ var_ref ';' .

    $default  reduce using rule 145 (simple_stat)


State 254

  144 simple_stat: PRINT expr ';' .

    $default  reduce using rule 144 (simple_stat)


State 255

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  150 bool_expr: expr .

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 150 (bool_expr)


State 256

  148 condition: IF '(' bool_expr . ')' compound
  149          | IF '(' bool_expr . ')' compound ELSE compound

    ')'  shift, and go to state 273


State 257

  155 while_stat: DO $@25 compound . $@26 WHILE '(' bool_expr ')' ';'

    $default  reduce using rule 154 ($@26)

    $@26  go to state 274


State 258

  152 while_stat: WHILE '(' bool_expr . ')' $@24 compound

    ')'  shift, and go to state 275


State 259

  128 arr_ref: ID . arr_ref_step
  131 func_invo: ID . '(' expr_list expr ')'
  132          | ID . '(' expr ')'
  133          | ID . '(' ')'
  146 var_ref: ID .

    '('  shift, and go to state 85
    '['  shift, and go to state 86

    $default  reduce using rule 146 (var_ref)

    arr_ref_step  go to state 87


State 260

  162 init_expr: func_invo .
  167 init_expr_list: func_invo . ','

    ','  shift, and go to state 276

    $default  reduce using rule 162 (init_expr)


State 261

  163 init_expr: var_ref . '=' expr
  168 init_expr_list: var_ref . '=' expr ','

    '='  shift, and go to state 277


State 262

  157 for_stat: FOR '(' init_expr . ';' bool_expr ';' incr_expr ')' $@27 compound
  159         | FOR '(' init_expr . ';' ';' incr_expr ')' $@28 compound

    ';'  shift, and go to state 278


State 263

  160 init_expr: init_expr_list . var_ref '=' expr
  161          | init_expr_list . func_invo
  165 init_expr_list: init_expr_list . var_ref '=' expr ','
  166               | init_expr_list . func_invo ','

    ID  shift, and go to state 259

    arr_ref    go to state 228
    func_invo  go to state 279
    var_ref    go to state 280


State 264

  179 jump_stat: RETURN expr ';' .

    $default  reduce using rule 179 (jump_stat)


State 265

   38 compound: '{' $@16 compound_list . '}'
   43 compound_list: compound_list . var_all_def
   44              | compound_list . statement

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 187
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    READ          shift, and go to state 188
    PRINT         shift, and go to state 189
    IF            shift, and go to state 190
    DO            shift, and go to state 191
    WHILE         shift, and go to state 192
    FOR           shift, and go to state 193
    CONTINUE      shift, and go to state 194
    BREAK         shift, and go to state 195
    RETURN        shift, and go to state 196
    CONST         shift, and go to state 3
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 197
    '}'           shift, and go to state 281
    '!'           shift, and go to state 51

    var_all_def   go to state 242
    compound      go to state 199
    basic         go to state 202
    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    var_def       go to state 203
    expr          go to state 204
    arr_ref       go to state 205
    func_invo     go to state 59
    statement     go to state 243
    simple_stat   go to state 207
    var_ref       go to state 208
    condition     go to state 209
    while_stat    go to state 210
    for_stat      go to state 211
    jump_stat     go to state 212


State 266

   40 compound: '{' $@17 '}' .

    $default  reduce using rule 40 (compound)


State 267

   27 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}' .

    $default  reduce using rule 27 (func_def)


State 268

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  143 simple_stat: var_ref '=' expr . ';'

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ';'  shift, and go to state 282


State 269

   19 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func . $@3 '}'

    $default  reduce using rule 18 ($@3)

    $@3  go to state 283


State 270

   23 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 . '}'

    '}'  shift, and go to state 284


State 271

   30 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func . '}'

    '}'  shift, and go to state 285


State 272

   33 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}' .

    $default  reduce using rule 33 (func_def)


State 273

  148 condition: IF '(' bool_expr ')' . compound
  149          | IF '(' bool_expr ')' . compound ELSE compound

    '{'  shift, and go to state 197

    compound  go to state 286


State 274

  155 while_stat: DO $@25 compound $@26 . WHILE '(' bool_expr ')' ';'

    WHILE  shift, and go to state 287


State 275

  152 while_stat: WHILE '(' bool_expr ')' . $@24 compound

    $default  reduce using rule 151 ($@24)

    $@24  go to state 288


State 276

  167 init_expr_list: func_invo ',' .

    $default  reduce using rule 167 (init_expr_list)


State 277

  163 init_expr: var_ref '=' . expr
  168 init_expr_list: var_ref '=' . expr ','

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 289
    arr_ref       go to state 58
    func_invo     go to state 59


State 278

  157 for_stat: FOR '(' init_expr ';' . bool_expr ';' incr_expr ')' $@27 compound
  159         | FOR '(' init_expr ';' . ';' incr_expr ')' $@28 compound

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    ';'           shift, and go to state 290
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 255
    arr_ref       go to state 58
    func_invo     go to state 59
    bool_expr     go to state 291


State 279

  161 init_expr: init_expr_list func_invo .
  166 init_expr_list: init_expr_list func_invo . ','

    ','  shift, and go to state 292

    $default  reduce using rule 161 (init_expr)


State 280

  160 init_expr: init_expr_list var_ref . '=' expr
  165 init_expr_list: init_expr_list var_ref . '=' expr ','

    '='  shift, and go to state 293


State 281

   38 compound: '{' $@16 compound_list '}' .

    $default  reduce using rule 38 (compound)


State 282

  143 simple_stat: var_ref '=' expr ';' .

    $default  reduce using rule 143 (simple_stat)


State 283

   19 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 . '}'

    '}'  shift, and go to state 294


State 284

   23 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}' .

    $default  reduce using rule 23 (func_def)


State 285

   30 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}' .

    $default  reduce using rule 30 (func_def)


State 286

  148 condition: IF '(' bool_expr ')' compound .
  149          | IF '(' bool_expr ')' compound . ELSE compound

    ELSE  shift, and go to state 295

    $default  reduce using rule 148 (condition)


State 287

  155 while_stat: DO $@25 compound $@26 WHILE . '(' bool_expr ')' ';'

    '('  shift, and go to state 296


State 288

  152 while_stat: WHILE '(' bool_expr ')' $@24 . compound

    '{'  shift, and go to state 197

    compound  go to state 297


State 289

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  163 init_expr: var_ref '=' expr .
  168 init_expr_list: var_ref '=' expr . ','

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ','  shift, and go to state 298

    $default  reduce using rule 163 (init_expr)


State 290

  159 for_stat: FOR '(' init_expr ';' ';' . incr_expr ')' $@28 compound

    ID  shift, and go to state 259

    $default  reduce using rule 173 (incr_expr)

    arr_ref         go to state 228
    func_invo       go to state 299
    var_ref         go to state 300
    incr_expr       go to state 301
    incr_expr_list  go to state 302


State 291

  157 for_stat: FOR '(' init_expr ';' bool_expr . ';' incr_expr ')' $@27 compound

    ';'  shift, and go to state 303


State 292

  166 init_expr_list: init_expr_list func_invo ',' .

    $default  reduce using rule 166 (init_expr_list)


State 293

  160 init_expr: init_expr_list var_ref '=' . expr
  165 init_expr_list: init_expr_list var_ref '=' . expr ','

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 304
    arr_ref       go to state 58
    func_invo     go to state 59


State 294

   19 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}' .

    $default  reduce using rule 19 (func_def)


State 295

  149 condition: IF '(' bool_expr ')' compound ELSE . compound

    '{'  shift, and go to state 197

    compound  go to state 305


State 296

  155 while_stat: DO $@25 compound $@26 WHILE '(' . bool_expr ')' ';'

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 255
    arr_ref       go to state 58
    func_invo     go to state 59
    bool_expr     go to state 306


State 297

  152 while_stat: WHILE '(' bool_expr ')' $@24 compound .

    $default  reduce using rule 152 (while_stat)


State 298

  168 init_expr_list: var_ref '=' expr ',' .

    $default  reduce using rule 168 (init_expr_list)


State 299

  172 incr_expr: func_invo .
  177 incr_expr_list: func_invo .

    ID        reduce using rule 177 (incr_expr_list)
    $default  reduce using rule 172 (incr_expr)


State 300

  171 incr_expr: var_ref . '=' expr
  176 incr_expr_list: var_ref . '=' expr ','

    '='  shift, and go to state 307


State 301

  159 for_stat: FOR '(' init_expr ';' ';' incr_expr . ')' $@28 compound

    ')'  shift, and go to state 308


State 302

  169 incr_expr: incr_expr_list . var_ref '=' expr ','
  170          | incr_expr_list . func_invo
  174 incr_expr_list: incr_expr_list . var_ref '=' expr ','
  175               | incr_expr_list . func_invo ','

    ID  shift, and go to state 259

    arr_ref    go to state 228
    func_invo  go to state 309
    var_ref    go to state 310


State 303

  157 for_stat: FOR '(' init_expr ';' bool_expr ';' . incr_expr ')' $@27 compound

    ID  shift, and go to state 259

    $default  reduce using rule 173 (incr_expr)

    arr_ref         go to state 228
    func_invo       go to state 299
    var_ref         go to state 300
    incr_expr       go to state 311
    incr_expr_list  go to state 302


State 304

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  160 init_expr: init_expr_list var_ref '=' expr .
  165 init_expr_list: init_expr_list var_ref '=' expr . ','

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ','  shift, and go to state 312

    $default  reduce using rule 160 (init_expr)


State 305

  149 condition: IF '(' bool_expr ')' compound ELSE compound .

    $default  reduce using rule 149 (condition)


State 306

  155 while_stat: DO $@25 compound $@26 WHILE '(' bool_expr . ')' ';'

    ')'  shift, and go to state 313


State 307

  171 incr_expr: var_ref '=' . expr
  176 incr_expr_list: var_ref '=' . expr ','

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 314
    arr_ref       go to state 58
    func_invo     go to state 59


State 308

  159 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' . $@28 compound

    $default  reduce using rule 158 ($@28)

    $@28  go to state 315


State 309

  170 incr_expr: incr_expr_list func_invo .
  175 incr_expr_list: incr_expr_list func_invo . ','

    ','  shift, and go to state 316

    $default  reduce using rule 170 (incr_expr)


State 310

  169 incr_expr: incr_expr_list var_ref . '=' expr ','
  174 incr_expr_list: incr_expr_list var_ref . '=' expr ','

    '='  shift, and go to state 317


State 311

  157 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr . ')' $@27 compound

    ')'  shift, and go to state 318


State 312

  165 init_expr_list: init_expr_list var_ref '=' expr ',' .

    $default  reduce using rule 165 (init_expr_list)


State 313

  155 while_stat: DO $@25 compound $@26 WHILE '(' bool_expr ')' . ';'

    ';'  shift, and go to state 319


State 314

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  171 incr_expr: var_ref '=' expr .
  176 incr_expr_list: var_ref '=' expr . ','

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ','  shift, and go to state 320

    $default  reduce using rule 171 (incr_expr)


State 315

  159 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' $@28 . compound

    '{'  shift, and go to state 197

    compound  go to state 321


State 316

  175 incr_expr_list: incr_expr_list func_invo ',' .

    $default  reduce using rule 175 (incr_expr_list)


State 317

  169 incr_expr: incr_expr_list var_ref '=' . expr ','
  174 incr_expr_list: incr_expr_list var_ref '=' . expr ','

    ID            shift, and go to state 44
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    BOOL_CONST    shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    '-'           shift, and go to state 49
    '('           shift, and go to state 50
    '!'           shift, and go to state 51

    value_type    go to state 52
    int_value     go to state 53
    float_value   go to state 54
    bool_value    go to state 55
    string_value  go to state 56
    expr          go to state 322
    arr_ref       go to state 58
    func_invo     go to state 59


State 318

  157 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' . $@27 compound

    $default  reduce using rule 156 ($@27)

    $@27  go to state 323


State 319

  155 while_stat: DO $@25 compound $@26 WHILE '(' bool_expr ')' ';' .

    $default  reduce using rule 155 (while_stat)


State 320

  176 incr_expr_list: var_ref '=' expr ',' .

    $default  reduce using rule 176 (incr_expr_list)


State 321

  159 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' $@28 compound .

    $default  reduce using rule 159 (for_stat)


State 322

  108 expr: expr . '*' expr
  109     | expr . '/' expr
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '%' expr
  113     | expr . '<' expr
  114     | expr . LE expr
  115     | expr . '>' expr
  116     | expr . GE expr
  117     | expr . EQ expr
  118     | expr . NE expr
  121     | expr . AND expr
  122     | expr . OR expr
  169 incr_expr: incr_expr_list var_ref '=' expr . ','
  174 incr_expr_list: incr_expr_list var_ref '=' expr . ','

    OR   shift, and go to state 91
    AND  shift, and go to state 92
    LE   shift, and go to state 93
    EQ   shift, and go to state 94
    GE   shift, and go to state 95
    NE   shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    ','  shift, and go to state 324


State 323

  157 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' $@27 . compound

    '{'  shift, and go to state 197

    compound  go to state 325


State 324

  169 incr_expr: incr_expr_list var_ref '=' expr ',' .
  174 incr_expr_list: incr_expr_list var_ref '=' expr ',' .

    ID        reduce using rule 174 (incr_expr_list)
    $default  reduce using rule 169 (incr_expr)


State 325

  157 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' $@27 compound .

    $default  reduce using rule 157 (for_stat)
