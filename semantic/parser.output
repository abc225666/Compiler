Grammar

    0 $accept: program $end

    1 program: gvar_all_def func_def prog_content
    2        | gvar_all_def func_def
    3        | func_def prog_content
    4        | func_def

    5 prog_content: prog_content gvar_def
    6             | prog_content func_def
    7             | prog_content func_decl
    8             | gvar_def
    9             | func_def
   10             | func_decl

   11 gvar_all_def: gvar_all_def gvar_def
   12             | gvar_all_def func_decl
   13             | gvar_def
   14             | func_decl

   15 var_all_def: var_def

   16 gvar_def: basic gvar_list ID ';'
   17         | basic gvar_list ID '=' expr ';'
   18         | basic ID ';'
   19         | basic ID '=' expr ';'
   20         | CONST basic gconst_list ID '=' liter_const ';'
   21         | CONST basic ID '=' liter_const ';'

   22 gvar_list: gvar_list ID ','
   23          | gvar_list ID '=' expr ','
   24          | ID ','
   25          | ID '=' expr ','

   26 gconst_list: gconst_list ID '=' liter_const ','
   27            | ID '=' liter_const ','

   28 var_def: basic var_list ID ';'
   29        | basic var_list ID '=' expr ';'
   30        | basic ID ';'
   31        | basic ID '=' expr ';'
   32        | CONST basic const_list ID '=' liter_const ';'
   33        | CONST basic ID '=' liter_const ';'

   34 $@1: %empty

   35 $@2: %empty

   36 $@3: %empty

   37 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'

   38 $@4: %empty

   39 $@5: %empty

   40 $@6: %empty

   41 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'

   42 $@7: %empty

   43 $@8: %empty

   44 $@9: %empty

   45 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'

   46 $@10: %empty

   47 $@11: %empty

   48 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'

   49 $@12: %empty

   50 $@13: %empty

   51 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}'

   52 $@14: %empty

   53 $@15: %empty

   54 func_def: void_reduce ID '(' ')' $@14 '{' $@15 compound_in_argu_func '}'

   55 $@16: %empty

   56 compound: '{' $@16 compound_list '}'

   57 $@17: %empty

   58 compound: '{' $@17 '}'

   59 statement: compound
   60          | simple_stat
   61          | condition
   62          | while_stat
   63          | for_stat
   64          | jump_stat
   65          | expr ';'

   66 compound_in_argu_func: compound_list
   67                      | %empty

   68 compound_list: compound_list var_all_def
   69              | compound_list statement
   70              | statement
   71              | var_all_def

   72 $@18: %empty

   73 func_decl: basic ID '(' argu_list argu ')' $@18 ';'

   74 $@19: %empty

   75 func_decl: basic ID '(' argu ')' $@19 ';'

   76 $@20: %empty

   77 func_decl: basic ID '(' ')' $@20 ';'

   78 $@21: %empty

   79 func_decl: void_reduce ID '(' argu_list argu ')' $@21 ';'

   80 $@22: %empty

   81 func_decl: void_reduce ID '(' argu ')' $@22 ';'

   82 $@23: %empty

   83 func_decl: void_reduce ID '(' ')' $@23 ';'

   84 argu_list: argu_list argu ','
   85          | argu ','

   86 argu: basic ID

   87 basic: BASIC_TYPE

   88 void_reduce: VOID

   89 liter_const: int_value
   90            | '-' int_value
   91            | float_value
   92            | '-' float_value
   93            | bool_value
   94            | string_value

   95 value_type: int_value
   96           | float_value
   97           | bool_value
   98           | string_value

   99 int_value: INT_CONST

  100 float_value: FLOAT_CONST

  101 bool_value: BOOL_CONST

  102 string_value: STRING_CONST

  103 var_list: var_list ID ','
  104         | var_list ID '=' expr ','
  105         | ID ','
  106         | ID '=' expr ','

  107 const_list: const_list ID '=' liter_const ','
  108           | ID '=' liter_const ','

  109 expr: expr '*' expr
  110     | expr '/' expr
  111     | expr '+' expr
  112     | expr '-' expr
  113     | expr '%' expr
  114     | expr '<' expr
  115     | expr LE expr
  116     | expr '>' expr
  117     | expr GE expr
  118     | expr EQ expr
  119     | expr NE expr
  120     | '(' expr ')'
  121     | '-' expr
  122     | expr AND expr
  123     | expr OR expr
  124     | '!' expr
  125     | value_type
  126     | ID
  127     | func_invo

  128 func_invo: ID '(' expr_list expr ')'
  129          | ID '(' expr ')'
  130          | ID '(' ')'

  131 expr_list: expr_list expr ','
  132          | expr ','

  133 simple_stat: var_ref '=' expr ';'
  134            | PRINT expr ';'
  135            | READ var_ref ';'

  136 var_ref: ID

  137 condition: IF '(' bool_expr ')' compound
  138          | IF '(' bool_expr ')' compound ELSE compound

  139 bool_expr: expr

  140 $@24: %empty

  141 while_stat: WHILE '(' bool_expr ')' $@24 compound

  142 $@25: %empty

  143 $@26: %empty

  144 while_stat: DO $@25 compound $@26 WHILE '(' bool_expr ')' ';'

  145 $@27: %empty

  146 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' $@27 compound

  147 $@28: %empty

  148 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' $@28 compound

  149 init_expr: init_expr_list var_ref '=' expr
  150          | init_expr_list func_invo
  151          | func_invo
  152          | var_ref '=' expr
  153          | %empty

  154 init_expr_list: init_expr_list var_ref '=' expr ','
  155               | init_expr_list func_invo ','
  156               | func_invo ','
  157               | var_ref '=' expr ','

  158 incr_expr: incr_expr_list var_ref '=' expr ','
  159          | incr_expr_list func_invo
  160          | var_ref '=' expr
  161          | func_invo
  162          | %empty

  163 incr_expr_list: incr_expr_list var_ref '=' expr ','
  164               | incr_expr_list func_invo ','
  165               | var_ref '=' expr ','
  166               | func_invo

  167 jump_stat: RETURN ';'
  168          | RETURN expr ';'
  169          | BREAK ';'
  170          | CONTINUE ';'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 124
'%' (37) 113
'(' (40) 37 41 45 48 51 54 73 75 77 79 81 83 120 128 129 130 137 138
    141 144 146 148
')' (41) 37 41 45 48 51 54 73 75 77 79 81 83 120 128 129 130 137 138
    141 144 146 148
'*' (42) 109
'+' (43) 111
',' (44) 22 23 24 25 26 27 84 85 103 104 105 106 107 108 131 132 154
    155 156 157 158 163 164 165
'-' (45) 90 92 112 121
'/' (47) 110
';' (59) 16 17 18 19 20 21 28 29 30 31 32 33 65 73 75 77 79 81 83 133
    134 135 144 146 148 167 168 169 170
'<' (60) 114
'=' (61) 17 19 20 21 23 25 26 27 29 31 32 33 104 106 107 108 133 149
    152 154 157 158 160 163 165
'>' (62) 116
'{' (123) 37 41 45 48 51 54 56 58
'}' (125) 37 41 45 48 51 54 56 58
error (256)
VOID (258) 88
BASIC_TYPE (259) 87
ID (260) 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 37 41
    45 48 51 54 73 75 77 79 81 83 86 103 104 105 106 107 108 126 128
    129 130 136
INT_CONST (261) 99
FLOAT_CONST (262) 100
BOOL_CONST (263) 101
STRING_CONST (264) 102
READ (265) 135
PRINT (266) 134
IF (267) 137 138
ELSE (268) 138
DO (269) 144
WHILE (270) 141 144
FOR (271) 146 148
CONTINUE (272) 170
BREAK (273) 169
RETURN (274) 167 168
CONST (275) 20 21 32 33
OR (276) 123
AND (277) 122
LE (278) 115
EQ (279) 118
GE (280) 117
NE (281) 119
UNOT (282)
UMINUS (283)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1 2 3 4, on right: 0
prog_content (46)
    on left: 5 6 7 8 9 10, on right: 1 3 5 6 7
gvar_all_def (47)
    on left: 11 12 13 14, on right: 1 2 11 12
var_all_def (48)
    on left: 15, on right: 68 71
gvar_def (49)
    on left: 16 17 18 19 20 21, on right: 5 8 11 13
gvar_list (50)
    on left: 22 23 24 25, on right: 16 17 22 23
gconst_list (51)
    on left: 26 27, on right: 20 26
var_def (52)
    on left: 28 29 30 31 32 33, on right: 15
func_def (53)
    on left: 37 41 45 48 51 54, on right: 1 2 3 4 6 9
$@1 (54)
    on left: 34, on right: 37
$@2 (55)
    on left: 35, on right: 37
$@3 (56)
    on left: 36, on right: 37
$@4 (57)
    on left: 38, on right: 41
$@5 (58)
    on left: 39, on right: 41
$@6 (59)
    on left: 40, on right: 41
$@7 (60)
    on left: 42, on right: 45
$@8 (61)
    on left: 43, on right: 45
$@9 (62)
    on left: 44, on right: 45
$@10 (63)
    on left: 46, on right: 48
$@11 (64)
    on left: 47, on right: 48
$@12 (65)
    on left: 49, on right: 51
$@13 (66)
    on left: 50, on right: 51
$@14 (67)
    on left: 52, on right: 54
$@15 (68)
    on left: 53, on right: 54
compound (69)
    on left: 56 58, on right: 59 137 138 141 144 146 148
$@16 (70)
    on left: 55, on right: 56
$@17 (71)
    on left: 57, on right: 58
statement (72)
    on left: 59 60 61 62 63 64 65, on right: 69 70
compound_in_argu_func (73)
    on left: 66 67, on right: 37 41 45 48 51 54
compound_list (74)
    on left: 68 69 70 71, on right: 56 66 68 69
func_decl (75)
    on left: 73 75 77 79 81 83, on right: 7 10 12 14
$@18 (76)
    on left: 72, on right: 73
$@19 (77)
    on left: 74, on right: 75
$@20 (78)
    on left: 76, on right: 77
$@21 (79)
    on left: 78, on right: 79
$@22 (80)
    on left: 80, on right: 81
$@23 (81)
    on left: 82, on right: 83
argu_list (82)
    on left: 84 85, on right: 37 48 73 79 84
argu (83)
    on left: 86, on right: 37 41 48 51 73 75 79 81 84 85
basic (84)
    on left: 87, on right: 16 17 18 19 20 21 28 29 30 31 32 33 37 41
    45 73 75 77 86
void_reduce (85)
    on left: 88, on right: 48 51 54 79 81 83
liter_const (86)
    on left: 89 90 91 92 93 94, on right: 20 21 26 27 32 33 107 108
value_type (87)
    on left: 95 96 97 98, on right: 125
int_value (88)
    on left: 99, on right: 89 90 95
float_value (89)
    on left: 100, on right: 91 92 96
bool_value (90)
    on left: 101, on right: 93 97
string_value (91)
    on left: 102, on right: 94 98
var_list (92)
    on left: 103 104 105 106, on right: 28 29 103 104
const_list (93)
    on left: 107 108, on right: 32 107
expr (94)
    on left: 109 110 111 112 113 114 115 116 117 118 119 120 121 122
    123 124 125 126 127, on right: 17 19 23 25 29 31 65 104 106 109
    110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 128
    129 131 132 133 134 139 149 152 154 157 158 160 163 165 168
func_invo (95)
    on left: 128 129 130, on right: 127 150 151 155 156 159 161 164
    166
expr_list (96)
    on left: 131 132, on right: 128 131
simple_stat (97)
    on left: 133 134 135, on right: 60
var_ref (98)
    on left: 136, on right: 133 135 149 152 154 157 158 160 163 165
condition (99)
    on left: 137 138, on right: 61
bool_expr (100)
    on left: 139, on right: 137 138 141 144 146
while_stat (101)
    on left: 141 144, on right: 62
$@24 (102)
    on left: 140, on right: 141
$@25 (103)
    on left: 142, on right: 144
$@26 (104)
    on left: 143, on right: 144
for_stat (105)
    on left: 146 148, on right: 63
$@27 (106)
    on left: 145, on right: 146
$@28 (107)
    on left: 147, on right: 148
init_expr (108)
    on left: 149 150 151 152 153, on right: 146 148
init_expr_list (109)
    on left: 154 155 156 157, on right: 149 150 154 155
incr_expr (110)
    on left: 158 159 160 161 162, on right: 146 148
incr_expr_list (111)
    on left: 163 164 165 166, on right: 158 159 163 164
jump_stat (112)
    on left: 167 168 169 170, on right: 64


State 0

    0 $accept: . program $end

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    program       go to state 4
    gvar_all_def  go to state 5
    gvar_def      go to state 6
    func_def      go to state 7
    func_decl     go to state 8
    basic         go to state 9
    void_reduce   go to state 10


State 1

   88 void_reduce: VOID .

    $default  reduce using rule 88 (void_reduce)


State 2

   87 basic: BASIC_TYPE .

    $default  reduce using rule 87 (basic)


State 3

   20 gvar_def: CONST . basic gconst_list ID '=' liter_const ';'
   21         | CONST . basic ID '=' liter_const ';'

    BASIC_TYPE  shift, and go to state 2

    basic  go to state 11


State 4

    0 $accept: program . $end

    $end  shift, and go to state 12


State 5

    1 program: gvar_all_def . func_def prog_content
    2        | gvar_all_def . func_def
   11 gvar_all_def: gvar_all_def . gvar_def
   12             | gvar_all_def . func_decl

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    gvar_def     go to state 13
    func_def     go to state 14
    func_decl    go to state 15
    basic        go to state 9
    void_reduce  go to state 10


State 6

   13 gvar_all_def: gvar_def .

    $default  reduce using rule 13 (gvar_all_def)


State 7

    3 program: func_def . prog_content
    4        | func_def .

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 4 (program)

    prog_content  go to state 16
    gvar_def      go to state 17
    func_def      go to state 18
    func_decl     go to state 19
    basic         go to state 9
    void_reduce   go to state 10


State 8

   14 gvar_all_def: func_decl .

    $default  reduce using rule 14 (gvar_all_def)


State 9

   16 gvar_def: basic . gvar_list ID ';'
   17         | basic . gvar_list ID '=' expr ';'
   18         | basic . ID ';'
   19         | basic . ID '=' expr ';'
   37 func_def: basic . ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   41         | basic . ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   45         | basic . ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'
   73 func_decl: basic . ID '(' argu_list argu ')' $@18 ';'
   75          | basic . ID '(' argu ')' $@19 ';'
   77          | basic . ID '(' ')' $@20 ';'

    ID  shift, and go to state 20

    gvar_list  go to state 21


State 10

   48 func_def: void_reduce . ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   51         | void_reduce . ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}'
   54         | void_reduce . ID '(' ')' $@14 '{' $@15 compound_in_argu_func '}'
   79 func_decl: void_reduce . ID '(' argu_list argu ')' $@21 ';'
   81          | void_reduce . ID '(' argu ')' $@22 ';'
   83          | void_reduce . ID '(' ')' $@23 ';'

    ID  shift, and go to state 22


State 11

   20 gvar_def: CONST basic . gconst_list ID '=' liter_const ';'
   21         | CONST basic . ID '=' liter_const ';'

    ID  shift, and go to state 23

    gconst_list  go to state 24


State 12

    0 $accept: program $end .

    $default  accept


State 13

   11 gvar_all_def: gvar_all_def gvar_def .

    $default  reduce using rule 11 (gvar_all_def)


State 14

    1 program: gvar_all_def func_def . prog_content
    2        | gvar_all_def func_def .

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 2 (program)

    prog_content  go to state 25
    gvar_def      go to state 17
    func_def      go to state 18
    func_decl     go to state 19
    basic         go to state 9
    void_reduce   go to state 10


State 15

   12 gvar_all_def: gvar_all_def func_decl .

    $default  reduce using rule 12 (gvar_all_def)


State 16

    3 program: func_def prog_content .
    5 prog_content: prog_content . gvar_def
    6             | prog_content . func_def
    7             | prog_content . func_decl

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 3 (program)

    gvar_def     go to state 26
    func_def     go to state 27
    func_decl    go to state 28
    basic        go to state 9
    void_reduce  go to state 10


State 17

    8 prog_content: gvar_def .

    $default  reduce using rule 8 (prog_content)


State 18

    9 prog_content: func_def .

    $default  reduce using rule 9 (prog_content)


State 19

   10 prog_content: func_decl .

    $default  reduce using rule 10 (prog_content)


State 20

   18 gvar_def: basic ID . ';'
   19         | basic ID . '=' expr ';'
   24 gvar_list: ID . ','
   25          | ID . '=' expr ','
   37 func_def: basic ID . '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   41         | basic ID . '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   45         | basic ID . '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'
   73 func_decl: basic ID . '(' argu_list argu ')' $@18 ';'
   75          | basic ID . '(' argu ')' $@19 ';'
   77          | basic ID . '(' ')' $@20 ';'

    ';'  shift, and go to state 29
    '='  shift, and go to state 30
    ','  shift, and go to state 31
    '('  shift, and go to state 32


State 21

   16 gvar_def: basic gvar_list . ID ';'
   17         | basic gvar_list . ID '=' expr ';'
   22 gvar_list: gvar_list . ID ','
   23          | gvar_list . ID '=' expr ','

    ID  shift, and go to state 33


State 22

   48 func_def: void_reduce ID . '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   51         | void_reduce ID . '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}'
   54         | void_reduce ID . '(' ')' $@14 '{' $@15 compound_in_argu_func '}'
   79 func_decl: void_reduce ID . '(' argu_list argu ')' $@21 ';'
   81          | void_reduce ID . '(' argu ')' $@22 ';'
   83          | void_reduce ID . '(' ')' $@23 ';'

    '('  shift, and go to state 34


State 23

   21 gvar_def: CONST basic ID . '=' liter_const ';'
   27 gconst_list: ID . '=' liter_const ','

    '='  shift, and go to state 35


State 24

   20 gvar_def: CONST basic gconst_list . ID '=' liter_const ';'
   26 gconst_list: gconst_list . ID '=' liter_const ','

    ID  shift, and go to state 36


State 25

    1 program: gvar_all_def func_def prog_content .
    5 prog_content: prog_content . gvar_def
    6             | prog_content . func_def
    7             | prog_content . func_decl

    VOID        shift, and go to state 1
    BASIC_TYPE  shift, and go to state 2
    CONST       shift, and go to state 3

    $default  reduce using rule 1 (program)

    gvar_def     go to state 26
    func_def     go to state 27
    func_decl    go to state 28
    basic        go to state 9
    void_reduce  go to state 10


State 26

    5 prog_content: prog_content gvar_def .

    $default  reduce using rule 5 (prog_content)


State 27

    6 prog_content: prog_content func_def .

    $default  reduce using rule 6 (prog_content)


State 28

    7 prog_content: prog_content func_decl .

    $default  reduce using rule 7 (prog_content)


State 29

   18 gvar_def: basic ID ';' .

    $default  reduce using rule 18 (gvar_def)


State 30

   19 gvar_def: basic ID '=' . expr ';'
   25 gvar_list: ID '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 50
    func_invo     go to state 51


State 31

   24 gvar_list: ID ',' .

    $default  reduce using rule 24 (gvar_list)


State 32

   37 func_def: basic ID '(' . argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   41         | basic ID '(' . argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   45         | basic ID '(' . ')' $@7 '{' $@8 compound_in_argu_func $@9 '}'
   73 func_decl: basic ID '(' . argu_list argu ')' $@18 ';'
   75          | basic ID '(' . argu ')' $@19 ';'
   77          | basic ID '(' . ')' $@20 ';'

    BASIC_TYPE  shift, and go to state 2
    ')'         shift, and go to state 52

    argu_list  go to state 53
    argu       go to state 54
    basic      go to state 55


State 33

   16 gvar_def: basic gvar_list ID . ';'
   17         | basic gvar_list ID . '=' expr ';'
   22 gvar_list: gvar_list ID . ','
   23          | gvar_list ID . '=' expr ','

    ';'  shift, and go to state 56
    '='  shift, and go to state 57
    ','  shift, and go to state 58


State 34

   48 func_def: void_reduce ID '(' . argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   51         | void_reduce ID '(' . argu ')' $@12 '{' $@13 compound_in_argu_func '}'
   54         | void_reduce ID '(' . ')' $@14 '{' $@15 compound_in_argu_func '}'
   79 func_decl: void_reduce ID '(' . argu_list argu ')' $@21 ';'
   81          | void_reduce ID '(' . argu ')' $@22 ';'
   83          | void_reduce ID '(' . ')' $@23 ';'

    BASIC_TYPE  shift, and go to state 2
    ')'         shift, and go to state 59

    argu_list  go to state 60
    argu       go to state 61
    basic      go to state 55


State 35

   21 gvar_def: CONST basic ID '=' . liter_const ';'
   27 gconst_list: ID '=' . liter_const ','

    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 62

    liter_const   go to state 63
    int_value     go to state 64
    float_value   go to state 65
    bool_value    go to state 66
    string_value  go to state 67


State 36

   20 gvar_def: CONST basic gconst_list ID . '=' liter_const ';'
   26 gconst_list: gconst_list ID . '=' liter_const ','

    '='  shift, and go to state 68


State 37

  126 expr: ID .
  128 func_invo: ID . '(' expr_list expr ')'
  129          | ID . '(' expr ')'
  130          | ID . '(' ')'

    '('  shift, and go to state 69

    $default  reduce using rule 126 (expr)


State 38

   99 int_value: INT_CONST .

    $default  reduce using rule 99 (int_value)


State 39

  100 float_value: FLOAT_CONST .

    $default  reduce using rule 100 (float_value)


State 40

  101 bool_value: BOOL_CONST .

    $default  reduce using rule 101 (bool_value)


State 41

  102 string_value: STRING_CONST .

    $default  reduce using rule 102 (string_value)


State 42

  121 expr: '-' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 70
    func_invo     go to state 51


State 43

  120 expr: '(' . expr ')'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 71
    func_invo     go to state 51


State 44

  124 expr: '!' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 72
    func_invo     go to state 51


State 45

  125 expr: value_type .

    $default  reduce using rule 125 (expr)


State 46

   95 value_type: int_value .

    $default  reduce using rule 95 (value_type)


State 47

   96 value_type: float_value .

    $default  reduce using rule 96 (value_type)


State 48

   97 value_type: bool_value .

    $default  reduce using rule 97 (value_type)


State 49

   98 value_type: string_value .

    $default  reduce using rule 98 (value_type)


State 50

   19 gvar_def: basic ID '=' expr . ';'
   25 gvar_list: ID '=' expr . ','
  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 86
    ','  shift, and go to state 87


State 51

  127 expr: func_invo .

    $default  reduce using rule 127 (expr)


State 52

   45 func_def: basic ID '(' ')' . $@7 '{' $@8 compound_in_argu_func $@9 '}'
   77 func_decl: basic ID '(' ')' . $@20 ';'

    ';'       reduce using rule 76 ($@20)
    $default  reduce using rule 42 ($@7)

    $@7   go to state 88
    $@20  go to state 89


State 53

   37 func_def: basic ID '(' argu_list . argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   73 func_decl: basic ID '(' argu_list . argu ')' $@18 ';'
   84 argu_list: argu_list . argu ','

    BASIC_TYPE  shift, and go to state 2

    argu   go to state 90
    basic  go to state 55


State 54

   41 func_def: basic ID '(' argu . ')' $@4 '{' $@5 compound_in_argu_func $@6 '}'
   75 func_decl: basic ID '(' argu . ')' $@19 ';'
   85 argu_list: argu . ','

    ','  shift, and go to state 91
    ')'  shift, and go to state 92


State 55

   86 argu: basic . ID

    ID  shift, and go to state 93


State 56

   16 gvar_def: basic gvar_list ID ';' .

    $default  reduce using rule 16 (gvar_def)


State 57

   17 gvar_def: basic gvar_list ID '=' . expr ';'
   23 gvar_list: gvar_list ID '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 94
    func_invo     go to state 51


State 58

   22 gvar_list: gvar_list ID ',' .

    $default  reduce using rule 22 (gvar_list)


State 59

   54 func_def: void_reduce ID '(' ')' . $@14 '{' $@15 compound_in_argu_func '}'
   83 func_decl: void_reduce ID '(' ')' . $@23 ';'

    ';'       reduce using rule 82 ($@23)
    $default  reduce using rule 52 ($@14)

    $@14  go to state 95
    $@23  go to state 96


State 60

   48 func_def: void_reduce ID '(' argu_list . argu ')' $@10 '{' $@11 compound_in_argu_func '}'
   79 func_decl: void_reduce ID '(' argu_list . argu ')' $@21 ';'
   84 argu_list: argu_list . argu ','

    BASIC_TYPE  shift, and go to state 2

    argu   go to state 97
    basic  go to state 55


State 61

   51 func_def: void_reduce ID '(' argu . ')' $@12 '{' $@13 compound_in_argu_func '}'
   81 func_decl: void_reduce ID '(' argu . ')' $@22 ';'
   85 argu_list: argu . ','

    ','  shift, and go to state 91
    ')'  shift, and go to state 98


State 62

   90 liter_const: '-' . int_value
   92            | '-' . float_value

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39

    int_value    go to state 99
    float_value  go to state 100


State 63

   21 gvar_def: CONST basic ID '=' liter_const . ';'
   27 gconst_list: ID '=' liter_const . ','

    ';'  shift, and go to state 101
    ','  shift, and go to state 102


State 64

   89 liter_const: int_value .

    $default  reduce using rule 89 (liter_const)


State 65

   91 liter_const: float_value .

    $default  reduce using rule 91 (liter_const)


State 66

   93 liter_const: bool_value .

    $default  reduce using rule 93 (liter_const)


State 67

   94 liter_const: string_value .

    $default  reduce using rule 94 (liter_const)


State 68

   20 gvar_def: CONST basic gconst_list ID '=' . liter_const ';'
   26 gconst_list: gconst_list ID '=' . liter_const ','

    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 62

    liter_const   go to state 103
    int_value     go to state 64
    float_value   go to state 65
    bool_value    go to state 66
    string_value  go to state 67


State 69

  128 func_invo: ID '(' . expr_list expr ')'
  129          | ID '(' . expr ')'
  130          | ID '(' . ')'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    ')'           shift, and go to state 104
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 105
    func_invo     go to state 51
    expr_list     go to state 106


State 70

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  121     | '-' expr .
  122     | expr . AND expr
  123     | expr . OR expr

    $default  reduce using rule 121 (expr)


State 71

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  120     | '(' expr . ')'
  122     | expr . AND expr
  123     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ')'  shift, and go to state 107


State 72

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  124     | '!' expr .

    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 124 (expr)


State 73

  123 expr: expr OR . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 108
    func_invo     go to state 51


State 74

  122 expr: expr AND . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 109
    func_invo     go to state 51


State 75

  115 expr: expr LE . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 110
    func_invo     go to state 51


State 76

  118 expr: expr EQ . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 111
    func_invo     go to state 51


State 77

  117 expr: expr GE . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 112
    func_invo     go to state 51


State 78

  119 expr: expr NE . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 113
    func_invo     go to state 51


State 79

  114 expr: expr '<' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 114
    func_invo     go to state 51


State 80

  116 expr: expr '>' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 115
    func_invo     go to state 51


State 81

  111 expr: expr '+' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 116
    func_invo     go to state 51


State 82

  112 expr: expr '-' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 117
    func_invo     go to state 51


State 83

  109 expr: expr '*' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 118
    func_invo     go to state 51


State 84

  110 expr: expr '/' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 119
    func_invo     go to state 51


State 85

  113 expr: expr '%' . expr

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 120
    func_invo     go to state 51


State 86

   19 gvar_def: basic ID '=' expr ';' .

    $default  reduce using rule 19 (gvar_def)


State 87

   25 gvar_list: ID '=' expr ',' .

    $default  reduce using rule 25 (gvar_list)


State 88

   45 func_def: basic ID '(' ')' $@7 . '{' $@8 compound_in_argu_func $@9 '}'

    '{'  shift, and go to state 121


State 89

   77 func_decl: basic ID '(' ')' $@20 . ';'

    ';'  shift, and go to state 122


State 90

   37 func_def: basic ID '(' argu_list argu . ')' $@1 '{' $@2 compound_in_argu_func $@3 '}'
   73 func_decl: basic ID '(' argu_list argu . ')' $@18 ';'
   84 argu_list: argu_list argu . ','

    ','  shift, and go to state 123
    ')'  shift, and go to state 124


State 91

   85 argu_list: argu ',' .

    $default  reduce using rule 85 (argu_list)


State 92

   41 func_def: basic ID '(' argu ')' . $@4 '{' $@5 compound_in_argu_func $@6 '}'
   75 func_decl: basic ID '(' argu ')' . $@19 ';'

    ';'       reduce using rule 74 ($@19)
    $default  reduce using rule 38 ($@4)

    $@4   go to state 125
    $@19  go to state 126


State 93

   86 argu: basic ID .

    $default  reduce using rule 86 (argu)


State 94

   17 gvar_def: basic gvar_list ID '=' expr . ';'
   23 gvar_list: gvar_list ID '=' expr . ','
  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 127
    ','  shift, and go to state 128


State 95

   54 func_def: void_reduce ID '(' ')' $@14 . '{' $@15 compound_in_argu_func '}'

    '{'  shift, and go to state 129


State 96

   83 func_decl: void_reduce ID '(' ')' $@23 . ';'

    ';'  shift, and go to state 130


State 97

   48 func_def: void_reduce ID '(' argu_list argu . ')' $@10 '{' $@11 compound_in_argu_func '}'
   79 func_decl: void_reduce ID '(' argu_list argu . ')' $@21 ';'
   84 argu_list: argu_list argu . ','

    ','  shift, and go to state 123
    ')'  shift, and go to state 131


State 98

   51 func_def: void_reduce ID '(' argu ')' . $@12 '{' $@13 compound_in_argu_func '}'
   81 func_decl: void_reduce ID '(' argu ')' . $@22 ';'

    ';'       reduce using rule 80 ($@22)
    $default  reduce using rule 49 ($@12)

    $@12  go to state 132
    $@22  go to state 133


State 99

   90 liter_const: '-' int_value .

    $default  reduce using rule 90 (liter_const)


State 100

   92 liter_const: '-' float_value .

    $default  reduce using rule 92 (liter_const)


State 101

   21 gvar_def: CONST basic ID '=' liter_const ';' .

    $default  reduce using rule 21 (gvar_def)


State 102

   27 gconst_list: ID '=' liter_const ',' .

    $default  reduce using rule 27 (gconst_list)


State 103

   20 gvar_def: CONST basic gconst_list ID '=' liter_const . ';'
   26 gconst_list: gconst_list ID '=' liter_const . ','

    ';'  shift, and go to state 134
    ','  shift, and go to state 135


State 104

  130 func_invo: ID '(' ')' .

    $default  reduce using rule 130 (func_invo)


State 105

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  129 func_invo: ID '(' expr . ')'
  132 expr_list: expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 136
    ')'  shift, and go to state 137


State 106

  128 func_invo: ID '(' expr_list . expr ')'
  131 expr_list: expr_list . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 138
    func_invo     go to state 51


State 107

  120 expr: '(' expr ')' .

    $default  reduce using rule 120 (expr)


State 108

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  123     | expr OR expr .

    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 123 (expr)


State 109

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  122     | expr AND expr .
  123     | expr . OR expr

    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 122 (expr)


State 110

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  115     | expr LE expr .
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 115 (expr)


State 111

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  118     | expr EQ expr .
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 118 (expr)


State 112

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  117     | expr GE expr .
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 117 (expr)


State 113

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  119     | expr NE expr .
  122     | expr . AND expr
  123     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 119 (expr)


State 114

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  114     | expr '<' expr .
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 114 (expr)


State 115

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  116     | expr '>' expr .
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 116 (expr)


State 116

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  111     | expr '+' expr .
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 111 (expr)


State 117

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  112     | expr '-' expr .
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 112 (expr)


State 118

  109 expr: expr . '*' expr
  109     | expr '*' expr .
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    $default  reduce using rule 109 (expr)


State 119

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  110     | expr '/' expr .
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    $default  reduce using rule 110 (expr)


State 120

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  113     | expr '%' expr .
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    $default  reduce using rule 113 (expr)


State 121

   45 func_def: basic ID '(' ')' $@7 '{' . $@8 compound_in_argu_func $@9 '}'

    $default  reduce using rule 43 ($@8)

    $@8  go to state 139


State 122

   77 func_decl: basic ID '(' ')' $@20 ';' .

    $default  reduce using rule 77 (func_decl)


State 123

   84 argu_list: argu_list argu ',' .

    $default  reduce using rule 84 (argu_list)


State 124

   37 func_def: basic ID '(' argu_list argu ')' . $@1 '{' $@2 compound_in_argu_func $@3 '}'
   73 func_decl: basic ID '(' argu_list argu ')' . $@18 ';'

    ';'       reduce using rule 72 ($@18)
    $default  reduce using rule 34 ($@1)

    $@1   go to state 140
    $@18  go to state 141


State 125

   41 func_def: basic ID '(' argu ')' $@4 . '{' $@5 compound_in_argu_func $@6 '}'

    '{'  shift, and go to state 142


State 126

   75 func_decl: basic ID '(' argu ')' $@19 . ';'

    ';'  shift, and go to state 143


State 127

   17 gvar_def: basic gvar_list ID '=' expr ';' .

    $default  reduce using rule 17 (gvar_def)


State 128

   23 gvar_list: gvar_list ID '=' expr ',' .

    $default  reduce using rule 23 (gvar_list)


State 129

   54 func_def: void_reduce ID '(' ')' $@14 '{' . $@15 compound_in_argu_func '}'

    $default  reduce using rule 53 ($@15)

    $@15  go to state 144


State 130

   83 func_decl: void_reduce ID '(' ')' $@23 ';' .

    $default  reduce using rule 83 (func_decl)


State 131

   48 func_def: void_reduce ID '(' argu_list argu ')' . $@10 '{' $@11 compound_in_argu_func '}'
   79 func_decl: void_reduce ID '(' argu_list argu ')' . $@21 ';'

    ';'       reduce using rule 78 ($@21)
    $default  reduce using rule 46 ($@10)

    $@10  go to state 145
    $@21  go to state 146


State 132

   51 func_def: void_reduce ID '(' argu ')' $@12 . '{' $@13 compound_in_argu_func '}'

    '{'  shift, and go to state 147


State 133

   81 func_decl: void_reduce ID '(' argu ')' $@22 . ';'

    ';'  shift, and go to state 148


State 134

   20 gvar_def: CONST basic gconst_list ID '=' liter_const ';' .

    $default  reduce using rule 20 (gvar_def)


State 135

   26 gconst_list: gconst_list ID '=' liter_const ',' .

    $default  reduce using rule 26 (gconst_list)


State 136

  132 expr_list: expr ',' .

    $default  reduce using rule 132 (expr_list)


State 137

  129 func_invo: ID '(' expr ')' .

    $default  reduce using rule 129 (func_invo)


State 138

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  128 func_invo: ID '(' expr_list expr . ')'
  131 expr_list: expr_list expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 149
    ')'  shift, and go to state 150


State 139

   45 func_def: basic ID '(' ')' $@7 '{' $@8 . compound_in_argu_func $@9 '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 67 (compound_in_argu_func)

    var_all_def            go to state 163
    var_def                go to state 164
    compound               go to state 165
    statement              go to state 166
    compound_in_argu_func  go to state 167
    compound_list          go to state 168
    basic                  go to state 169
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 170
    func_invo              go to state 51
    simple_stat            go to state 171
    var_ref                go to state 172
    condition              go to state 173
    while_stat             go to state 174
    for_stat               go to state 175
    jump_stat              go to state 176


State 140

   37 func_def: basic ID '(' argu_list argu ')' $@1 . '{' $@2 compound_in_argu_func $@3 '}'

    '{'  shift, and go to state 177


State 141

   73 func_decl: basic ID '(' argu_list argu ')' $@18 . ';'

    ';'  shift, and go to state 178


State 142

   41 func_def: basic ID '(' argu ')' $@4 '{' . $@5 compound_in_argu_func $@6 '}'

    $default  reduce using rule 39 ($@5)

    $@5  go to state 179


State 143

   75 func_decl: basic ID '(' argu ')' $@19 ';' .

    $default  reduce using rule 75 (func_decl)


State 144

   54 func_def: void_reduce ID '(' ')' $@14 '{' $@15 . compound_in_argu_func '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 67 (compound_in_argu_func)

    var_all_def            go to state 163
    var_def                go to state 164
    compound               go to state 165
    statement              go to state 166
    compound_in_argu_func  go to state 180
    compound_list          go to state 168
    basic                  go to state 169
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 170
    func_invo              go to state 51
    simple_stat            go to state 171
    var_ref                go to state 172
    condition              go to state 173
    while_stat             go to state 174
    for_stat               go to state 175
    jump_stat              go to state 176


State 145

   48 func_def: void_reduce ID '(' argu_list argu ')' $@10 . '{' $@11 compound_in_argu_func '}'

    '{'  shift, and go to state 181


State 146

   79 func_decl: void_reduce ID '(' argu_list argu ')' $@21 . ';'

    ';'  shift, and go to state 182


State 147

   51 func_def: void_reduce ID '(' argu ')' $@12 '{' . $@13 compound_in_argu_func '}'

    $default  reduce using rule 50 ($@13)

    $@13  go to state 183


State 148

   81 func_decl: void_reduce ID '(' argu ')' $@22 ';' .

    $default  reduce using rule 81 (func_decl)


State 149

  131 expr_list: expr_list expr ',' .

    $default  reduce using rule 131 (expr_list)


State 150

  128 func_invo: ID '(' expr_list expr ')' .

    $default  reduce using rule 128 (func_invo)


State 151

  126 expr: ID .
  128 func_invo: ID . '(' expr_list expr ')'
  129          | ID . '(' expr ')'
  130          | ID . '(' ')'
  136 var_ref: ID .

    '('  shift, and go to state 69

    '='       reduce using rule 136 (var_ref)
    $default  reduce using rule 126 (expr)


State 152

  135 simple_stat: READ . var_ref ';'

    ID  shift, and go to state 184

    var_ref  go to state 185


State 153

  134 simple_stat: PRINT . expr ';'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 186
    func_invo     go to state 51


State 154

  137 condition: IF . '(' bool_expr ')' compound
  138          | IF . '(' bool_expr ')' compound ELSE compound

    '('  shift, and go to state 187


State 155

  144 while_stat: DO . $@25 compound $@26 WHILE '(' bool_expr ')' ';'

    $default  reduce using rule 142 ($@25)

    $@25  go to state 188


State 156

  141 while_stat: WHILE . '(' bool_expr ')' $@24 compound

    '('  shift, and go to state 189


State 157

  146 for_stat: FOR . '(' init_expr ';' bool_expr ';' incr_expr ')' $@27 compound
  148         | FOR . '(' init_expr ';' ';' incr_expr ')' $@28 compound

    '('  shift, and go to state 190


State 158

  170 jump_stat: CONTINUE . ';'

    ';'  shift, and go to state 191


State 159

  169 jump_stat: BREAK . ';'

    ';'  shift, and go to state 192


State 160

  167 jump_stat: RETURN . ';'
  168          | RETURN . expr ';'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    ';'           shift, and go to state 193
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 194
    func_invo     go to state 51


State 161

   32 var_def: CONST . basic const_list ID '=' liter_const ';'
   33        | CONST . basic ID '=' liter_const ';'

    BASIC_TYPE  shift, and go to state 2

    basic  go to state 195


State 162

   56 compound: '{' . $@16 compound_list '}'
   58         | '{' . $@17 '}'

    '}'       reduce using rule 57 ($@17)
    $default  reduce using rule 55 ($@16)

    $@16  go to state 196
    $@17  go to state 197


State 163

   71 compound_list: var_all_def .

    $default  reduce using rule 71 (compound_list)


State 164

   15 var_all_def: var_def .

    $default  reduce using rule 15 (var_all_def)


State 165

   59 statement: compound .

    $default  reduce using rule 59 (statement)


State 166

   70 compound_list: statement .

    $default  reduce using rule 70 (compound_list)


State 167

   45 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func . $@9 '}'

    $default  reduce using rule 44 ($@9)

    $@9  go to state 198


State 168

   66 compound_in_argu_func: compound_list .
   68 compound_list: compound_list . var_all_def
   69              | compound_list . statement

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 66 (compound_in_argu_func)

    var_all_def   go to state 199
    var_def       go to state 164
    compound      go to state 165
    statement     go to state 200
    basic         go to state 169
    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 170
    func_invo     go to state 51
    simple_stat   go to state 171
    var_ref       go to state 172
    condition     go to state 173
    while_stat    go to state 174
    for_stat      go to state 175
    jump_stat     go to state 176


State 169

   28 var_def: basic . var_list ID ';'
   29        | basic . var_list ID '=' expr ';'
   30        | basic . ID ';'
   31        | basic . ID '=' expr ';'

    ID  shift, and go to state 201

    var_list  go to state 202


State 170

   65 statement: expr . ';'
  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 203


State 171

   60 statement: simple_stat .

    $default  reduce using rule 60 (statement)


State 172

  133 simple_stat: var_ref . '=' expr ';'

    '='  shift, and go to state 204


State 173

   61 statement: condition .

    $default  reduce using rule 61 (statement)


State 174

   62 statement: while_stat .

    $default  reduce using rule 62 (statement)


State 175

   63 statement: for_stat .

    $default  reduce using rule 63 (statement)


State 176

   64 statement: jump_stat .

    $default  reduce using rule 64 (statement)


State 177

   37 func_def: basic ID '(' argu_list argu ')' $@1 '{' . $@2 compound_in_argu_func $@3 '}'

    $default  reduce using rule 35 ($@2)

    $@2  go to state 205


State 178

   73 func_decl: basic ID '(' argu_list argu ')' $@18 ';' .

    $default  reduce using rule 73 (func_decl)


State 179

   41 func_def: basic ID '(' argu ')' $@4 '{' $@5 . compound_in_argu_func $@6 '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 67 (compound_in_argu_func)

    var_all_def            go to state 163
    var_def                go to state 164
    compound               go to state 165
    statement              go to state 166
    compound_in_argu_func  go to state 206
    compound_list          go to state 168
    basic                  go to state 169
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 170
    func_invo              go to state 51
    simple_stat            go to state 171
    var_ref                go to state 172
    condition              go to state 173
    while_stat             go to state 174
    for_stat               go to state 175
    jump_stat              go to state 176


State 180

   54 func_def: void_reduce ID '(' ')' $@14 '{' $@15 compound_in_argu_func . '}'

    '}'  shift, and go to state 207


State 181

   48 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' . $@11 compound_in_argu_func '}'

    $default  reduce using rule 47 ($@11)

    $@11  go to state 208


State 182

   79 func_decl: void_reduce ID '(' argu_list argu ')' $@21 ';' .

    $default  reduce using rule 79 (func_decl)


State 183

   51 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 . compound_in_argu_func '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 67 (compound_in_argu_func)

    var_all_def            go to state 163
    var_def                go to state 164
    compound               go to state 165
    statement              go to state 166
    compound_in_argu_func  go to state 209
    compound_list          go to state 168
    basic                  go to state 169
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 170
    func_invo              go to state 51
    simple_stat            go to state 171
    var_ref                go to state 172
    condition              go to state 173
    while_stat             go to state 174
    for_stat               go to state 175
    jump_stat              go to state 176


State 184

  136 var_ref: ID .

    $default  reduce using rule 136 (var_ref)


State 185

  135 simple_stat: READ var_ref . ';'

    ';'  shift, and go to state 210


State 186

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  134 simple_stat: PRINT expr . ';'

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 211


State 187

  137 condition: IF '(' . bool_expr ')' compound
  138          | IF '(' . bool_expr ')' compound ELSE compound

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 212
    func_invo     go to state 51
    bool_expr     go to state 213


State 188

  144 while_stat: DO $@25 . compound $@26 WHILE '(' bool_expr ')' ';'

    '{'  shift, and go to state 162

    compound  go to state 214


State 189

  141 while_stat: WHILE '(' . bool_expr ')' $@24 compound

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 212
    func_invo     go to state 51
    bool_expr     go to state 215


State 190

  146 for_stat: FOR '(' . init_expr ';' bool_expr ';' incr_expr ')' $@27 compound
  148         | FOR '(' . init_expr ';' ';' incr_expr ')' $@28 compound

    ID  shift, and go to state 216

    $default  reduce using rule 153 (init_expr)

    func_invo       go to state 217
    var_ref         go to state 218
    init_expr       go to state 219
    init_expr_list  go to state 220


State 191

  170 jump_stat: CONTINUE ';' .

    $default  reduce using rule 170 (jump_stat)


State 192

  169 jump_stat: BREAK ';' .

    $default  reduce using rule 169 (jump_stat)


State 193

  167 jump_stat: RETURN ';' .

    $default  reduce using rule 167 (jump_stat)


State 194

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  168 jump_stat: RETURN expr . ';'

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 221


State 195

   32 var_def: CONST basic . const_list ID '=' liter_const ';'
   33        | CONST basic . ID '=' liter_const ';'

    ID  shift, and go to state 222

    const_list  go to state 223


State 196

   56 compound: '{' $@16 . compound_list '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    var_all_def    go to state 163
    var_def        go to state 164
    compound       go to state 165
    statement      go to state 166
    compound_list  go to state 224
    basic          go to state 169
    value_type     go to state 45
    int_value      go to state 46
    float_value    go to state 47
    bool_value     go to state 48
    string_value   go to state 49
    expr           go to state 170
    func_invo      go to state 51
    simple_stat    go to state 171
    var_ref        go to state 172
    condition      go to state 173
    while_stat     go to state 174
    for_stat       go to state 175
    jump_stat      go to state 176


State 197

   58 compound: '{' $@17 . '}'

    '}'  shift, and go to state 225


State 198

   45 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 . '}'

    '}'  shift, and go to state 226


State 199

   68 compound_list: compound_list var_all_def .

    $default  reduce using rule 68 (compound_list)


State 200

   69 compound_list: compound_list statement .

    $default  reduce using rule 69 (compound_list)


State 201

   30 var_def: basic ID . ';'
   31        | basic ID . '=' expr ';'
  105 var_list: ID . ','
  106         | ID . '=' expr ','

    ';'  shift, and go to state 227
    '='  shift, and go to state 228
    ','  shift, and go to state 229


State 202

   28 var_def: basic var_list . ID ';'
   29        | basic var_list . ID '=' expr ';'
  103 var_list: var_list . ID ','
  104         | var_list . ID '=' expr ','

    ID  shift, and go to state 230


State 203

   65 statement: expr ';' .

    $default  reduce using rule 65 (statement)


State 204

  133 simple_stat: var_ref '=' . expr ';'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 231
    func_invo     go to state 51


State 205

   37 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 . compound_in_argu_func $@3 '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 67 (compound_in_argu_func)

    var_all_def            go to state 163
    var_def                go to state 164
    compound               go to state 165
    statement              go to state 166
    compound_in_argu_func  go to state 232
    compound_list          go to state 168
    basic                  go to state 169
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 170
    func_invo              go to state 51
    simple_stat            go to state 171
    var_ref                go to state 172
    condition              go to state 173
    while_stat             go to state 174
    for_stat               go to state 175
    jump_stat              go to state 176


State 206

   41 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func . $@6 '}'

    $default  reduce using rule 40 ($@6)

    $@6  go to state 233


State 207

   54 func_def: void_reduce ID '(' ')' $@14 '{' $@15 compound_in_argu_func '}' .

    $default  reduce using rule 54 (func_def)


State 208

   48 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 . compound_in_argu_func '}'

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '!'           shift, and go to state 44

    $default  reduce using rule 67 (compound_in_argu_func)

    var_all_def            go to state 163
    var_def                go to state 164
    compound               go to state 165
    statement              go to state 166
    compound_in_argu_func  go to state 234
    compound_list          go to state 168
    basic                  go to state 169
    value_type             go to state 45
    int_value              go to state 46
    float_value            go to state 47
    bool_value             go to state 48
    string_value           go to state 49
    expr                   go to state 170
    func_invo              go to state 51
    simple_stat            go to state 171
    var_ref                go to state 172
    condition              go to state 173
    while_stat             go to state 174
    for_stat               go to state 175
    jump_stat              go to state 176


State 209

   51 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func . '}'

    '}'  shift, and go to state 235


State 210

  135 simple_stat: READ var_ref ';' .

    $default  reduce using rule 135 (simple_stat)


State 211

  134 simple_stat: PRINT expr ';' .

    $default  reduce using rule 134 (simple_stat)


State 212

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  139 bool_expr: expr .

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 139 (bool_expr)


State 213

  137 condition: IF '(' bool_expr . ')' compound
  138          | IF '(' bool_expr . ')' compound ELSE compound

    ')'  shift, and go to state 236


State 214

  144 while_stat: DO $@25 compound . $@26 WHILE '(' bool_expr ')' ';'

    $default  reduce using rule 143 ($@26)

    $@26  go to state 237


State 215

  141 while_stat: WHILE '(' bool_expr . ')' $@24 compound

    ')'  shift, and go to state 238


State 216

  128 func_invo: ID . '(' expr_list expr ')'
  129          | ID . '(' expr ')'
  130          | ID . '(' ')'
  136 var_ref: ID .

    '('  shift, and go to state 69

    $default  reduce using rule 136 (var_ref)


State 217

  151 init_expr: func_invo .
  156 init_expr_list: func_invo . ','

    ','  shift, and go to state 239

    $default  reduce using rule 151 (init_expr)


State 218

  152 init_expr: var_ref . '=' expr
  157 init_expr_list: var_ref . '=' expr ','

    '='  shift, and go to state 240


State 219

  146 for_stat: FOR '(' init_expr . ';' bool_expr ';' incr_expr ')' $@27 compound
  148         | FOR '(' init_expr . ';' ';' incr_expr ')' $@28 compound

    ';'  shift, and go to state 241


State 220

  149 init_expr: init_expr_list . var_ref '=' expr
  150          | init_expr_list . func_invo
  154 init_expr_list: init_expr_list . var_ref '=' expr ','
  155               | init_expr_list . func_invo ','

    ID  shift, and go to state 216

    func_invo  go to state 242
    var_ref    go to state 243


State 221

  168 jump_stat: RETURN expr ';' .

    $default  reduce using rule 168 (jump_stat)


State 222

   33 var_def: CONST basic ID . '=' liter_const ';'
  108 const_list: ID . '=' liter_const ','

    '='  shift, and go to state 244


State 223

   32 var_def: CONST basic const_list . ID '=' liter_const ';'
  107 const_list: const_list . ID '=' liter_const ','

    ID  shift, and go to state 245


State 224

   56 compound: '{' $@16 compound_list . '}'
   68 compound_list: compound_list . var_all_def
   69              | compound_list . statement

    BASIC_TYPE    shift, and go to state 2
    ID            shift, and go to state 151
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    READ          shift, and go to state 152
    PRINT         shift, and go to state 153
    IF            shift, and go to state 154
    DO            shift, and go to state 155
    WHILE         shift, and go to state 156
    FOR           shift, and go to state 157
    CONTINUE      shift, and go to state 158
    BREAK         shift, and go to state 159
    RETURN        shift, and go to state 160
    CONST         shift, and go to state 161
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '{'           shift, and go to state 162
    '}'           shift, and go to state 246
    '!'           shift, and go to state 44

    var_all_def   go to state 199
    var_def       go to state 164
    compound      go to state 165
    statement     go to state 200
    basic         go to state 169
    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 170
    func_invo     go to state 51
    simple_stat   go to state 171
    var_ref       go to state 172
    condition     go to state 173
    while_stat    go to state 174
    for_stat      go to state 175
    jump_stat     go to state 176


State 225

   58 compound: '{' $@17 '}' .

    $default  reduce using rule 58 (compound)


State 226

   45 func_def: basic ID '(' ')' $@7 '{' $@8 compound_in_argu_func $@9 '}' .

    $default  reduce using rule 45 (func_def)


State 227

   30 var_def: basic ID ';' .

    $default  reduce using rule 30 (var_def)


State 228

   31 var_def: basic ID '=' . expr ';'
  106 var_list: ID '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 247
    func_invo     go to state 51


State 229

  105 var_list: ID ',' .

    $default  reduce using rule 105 (var_list)


State 230

   28 var_def: basic var_list ID . ';'
   29        | basic var_list ID . '=' expr ';'
  103 var_list: var_list ID . ','
  104         | var_list ID . '=' expr ','

    ';'  shift, and go to state 248
    '='  shift, and go to state 249
    ','  shift, and go to state 250


State 231

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  133 simple_stat: var_ref '=' expr . ';'

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 251


State 232

   37 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func . $@3 '}'

    $default  reduce using rule 36 ($@3)

    $@3  go to state 252


State 233

   41 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 . '}'

    '}'  shift, and go to state 253


State 234

   48 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func . '}'

    '}'  shift, and go to state 254


State 235

   51 func_def: void_reduce ID '(' argu ')' $@12 '{' $@13 compound_in_argu_func '}' .

    $default  reduce using rule 51 (func_def)


State 236

  137 condition: IF '(' bool_expr ')' . compound
  138          | IF '(' bool_expr ')' . compound ELSE compound

    '{'  shift, and go to state 162

    compound  go to state 255


State 237

  144 while_stat: DO $@25 compound $@26 . WHILE '(' bool_expr ')' ';'

    WHILE  shift, and go to state 256


State 238

  141 while_stat: WHILE '(' bool_expr ')' . $@24 compound

    $default  reduce using rule 140 ($@24)

    $@24  go to state 257


State 239

  156 init_expr_list: func_invo ',' .

    $default  reduce using rule 156 (init_expr_list)


State 240

  152 init_expr: var_ref '=' . expr
  157 init_expr_list: var_ref '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 258
    func_invo     go to state 51


State 241

  146 for_stat: FOR '(' init_expr ';' . bool_expr ';' incr_expr ')' $@27 compound
  148         | FOR '(' init_expr ';' . ';' incr_expr ')' $@28 compound

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    ';'           shift, and go to state 259
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 212
    func_invo     go to state 51
    bool_expr     go to state 260


State 242

  150 init_expr: init_expr_list func_invo .
  155 init_expr_list: init_expr_list func_invo . ','

    ','  shift, and go to state 261

    $default  reduce using rule 150 (init_expr)


State 243

  149 init_expr: init_expr_list var_ref . '=' expr
  154 init_expr_list: init_expr_list var_ref . '=' expr ','

    '='  shift, and go to state 262


State 244

   33 var_def: CONST basic ID '=' . liter_const ';'
  108 const_list: ID '=' . liter_const ','

    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 62

    liter_const   go to state 263
    int_value     go to state 64
    float_value   go to state 65
    bool_value    go to state 66
    string_value  go to state 67


State 245

   32 var_def: CONST basic const_list ID . '=' liter_const ';'
  107 const_list: const_list ID . '=' liter_const ','

    '='  shift, and go to state 264


State 246

   56 compound: '{' $@16 compound_list '}' .

    $default  reduce using rule 56 (compound)


State 247

   31 var_def: basic ID '=' expr . ';'
  106 var_list: ID '=' expr . ','
  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 265
    ','  shift, and go to state 266


State 248

   28 var_def: basic var_list ID ';' .

    $default  reduce using rule 28 (var_def)


State 249

   29 var_def: basic var_list ID '=' . expr ';'
  104 var_list: var_list ID '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 267
    func_invo     go to state 51


State 250

  103 var_list: var_list ID ',' .

    $default  reduce using rule 103 (var_list)


State 251

  133 simple_stat: var_ref '=' expr ';' .

    $default  reduce using rule 133 (simple_stat)


State 252

   37 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 . '}'

    '}'  shift, and go to state 268


State 253

   41 func_def: basic ID '(' argu ')' $@4 '{' $@5 compound_in_argu_func $@6 '}' .

    $default  reduce using rule 41 (func_def)


State 254

   48 func_def: void_reduce ID '(' argu_list argu ')' $@10 '{' $@11 compound_in_argu_func '}' .

    $default  reduce using rule 48 (func_def)


State 255

  137 condition: IF '(' bool_expr ')' compound .
  138          | IF '(' bool_expr ')' compound . ELSE compound

    ELSE  shift, and go to state 269

    $default  reduce using rule 137 (condition)


State 256

  144 while_stat: DO $@25 compound $@26 WHILE . '(' bool_expr ')' ';'

    '('  shift, and go to state 270


State 257

  141 while_stat: WHILE '(' bool_expr ')' $@24 . compound

    '{'  shift, and go to state 162

    compound  go to state 271


State 258

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  152 init_expr: var_ref '=' expr .
  157 init_expr_list: var_ref '=' expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 272

    $default  reduce using rule 152 (init_expr)


State 259

  148 for_stat: FOR '(' init_expr ';' ';' . incr_expr ')' $@28 compound

    ID  shift, and go to state 216

    $default  reduce using rule 162 (incr_expr)

    func_invo       go to state 273
    var_ref         go to state 274
    incr_expr       go to state 275
    incr_expr_list  go to state 276


State 260

  146 for_stat: FOR '(' init_expr ';' bool_expr . ';' incr_expr ')' $@27 compound

    ';'  shift, and go to state 277


State 261

  155 init_expr_list: init_expr_list func_invo ',' .

    $default  reduce using rule 155 (init_expr_list)


State 262

  149 init_expr: init_expr_list var_ref '=' . expr
  154 init_expr_list: init_expr_list var_ref '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 278
    func_invo     go to state 51


State 263

   33 var_def: CONST basic ID '=' liter_const . ';'
  108 const_list: ID '=' liter_const . ','

    ';'  shift, and go to state 279
    ','  shift, and go to state 280


State 264

   32 var_def: CONST basic const_list ID '=' . liter_const ';'
  107 const_list: const_list ID '=' . liter_const ','

    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 62

    liter_const   go to state 281
    int_value     go to state 64
    float_value   go to state 65
    bool_value    go to state 66
    string_value  go to state 67


State 265

   31 var_def: basic ID '=' expr ';' .

    $default  reduce using rule 31 (var_def)


State 266

  106 var_list: ID '=' expr ',' .

    $default  reduce using rule 106 (var_list)


State 267

   29 var_def: basic var_list ID '=' expr . ';'
  104 var_list: var_list ID '=' expr . ','
  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ';'  shift, and go to state 282
    ','  shift, and go to state 283


State 268

   37 func_def: basic ID '(' argu_list argu ')' $@1 '{' $@2 compound_in_argu_func $@3 '}' .

    $default  reduce using rule 37 (func_def)


State 269

  138 condition: IF '(' bool_expr ')' compound ELSE . compound

    '{'  shift, and go to state 162

    compound  go to state 284


State 270

  144 while_stat: DO $@25 compound $@26 WHILE '(' . bool_expr ')' ';'

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 212
    func_invo     go to state 51
    bool_expr     go to state 285


State 271

  141 while_stat: WHILE '(' bool_expr ')' $@24 compound .

    $default  reduce using rule 141 (while_stat)


State 272

  157 init_expr_list: var_ref '=' expr ',' .

    $default  reduce using rule 157 (init_expr_list)


State 273

  161 incr_expr: func_invo .
  166 incr_expr_list: func_invo .

    ID        reduce using rule 166 (incr_expr_list)
    $default  reduce using rule 161 (incr_expr)


State 274

  160 incr_expr: var_ref . '=' expr
  165 incr_expr_list: var_ref . '=' expr ','

    '='  shift, and go to state 286


State 275

  148 for_stat: FOR '(' init_expr ';' ';' incr_expr . ')' $@28 compound

    ')'  shift, and go to state 287


State 276

  158 incr_expr: incr_expr_list . var_ref '=' expr ','
  159          | incr_expr_list . func_invo
  163 incr_expr_list: incr_expr_list . var_ref '=' expr ','
  164               | incr_expr_list . func_invo ','

    ID  shift, and go to state 216

    func_invo  go to state 288
    var_ref    go to state 289


State 277

  146 for_stat: FOR '(' init_expr ';' bool_expr ';' . incr_expr ')' $@27 compound

    ID  shift, and go to state 216

    $default  reduce using rule 162 (incr_expr)

    func_invo       go to state 273
    var_ref         go to state 274
    incr_expr       go to state 290
    incr_expr_list  go to state 276


State 278

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  149 init_expr: init_expr_list var_ref '=' expr .
  154 init_expr_list: init_expr_list var_ref '=' expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 291

    $default  reduce using rule 149 (init_expr)


State 279

   33 var_def: CONST basic ID '=' liter_const ';' .

    $default  reduce using rule 33 (var_def)


State 280

  108 const_list: ID '=' liter_const ',' .

    $default  reduce using rule 108 (const_list)


State 281

   32 var_def: CONST basic const_list ID '=' liter_const . ';'
  107 const_list: const_list ID '=' liter_const . ','

    ';'  shift, and go to state 292
    ','  shift, and go to state 293


State 282

   29 var_def: basic var_list ID '=' expr ';' .

    $default  reduce using rule 29 (var_def)


State 283

  104 var_list: var_list ID '=' expr ',' .

    $default  reduce using rule 104 (var_list)


State 284

  138 condition: IF '(' bool_expr ')' compound ELSE compound .

    $default  reduce using rule 138 (condition)


State 285

  144 while_stat: DO $@25 compound $@26 WHILE '(' bool_expr . ')' ';'

    ')'  shift, and go to state 294


State 286

  160 incr_expr: var_ref '=' . expr
  165 incr_expr_list: var_ref '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 295
    func_invo     go to state 51


State 287

  148 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' . $@28 compound

    $default  reduce using rule 147 ($@28)

    $@28  go to state 296


State 288

  159 incr_expr: incr_expr_list func_invo .
  164 incr_expr_list: incr_expr_list func_invo . ','

    ','  shift, and go to state 297

    $default  reduce using rule 159 (incr_expr)


State 289

  158 incr_expr: incr_expr_list var_ref . '=' expr ','
  163 incr_expr_list: incr_expr_list var_ref . '=' expr ','

    '='  shift, and go to state 298


State 290

  146 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr . ')' $@27 compound

    ')'  shift, and go to state 299


State 291

  154 init_expr_list: init_expr_list var_ref '=' expr ',' .

    $default  reduce using rule 154 (init_expr_list)


State 292

   32 var_def: CONST basic const_list ID '=' liter_const ';' .

    $default  reduce using rule 32 (var_def)


State 293

  107 const_list: const_list ID '=' liter_const ',' .

    $default  reduce using rule 107 (const_list)


State 294

  144 while_stat: DO $@25 compound $@26 WHILE '(' bool_expr ')' . ';'

    ';'  shift, and go to state 300


State 295

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  160 incr_expr: var_ref '=' expr .
  165 incr_expr_list: var_ref '=' expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 301

    $default  reduce using rule 160 (incr_expr)


State 296

  148 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' $@28 . compound

    '{'  shift, and go to state 162

    compound  go to state 302


State 297

  164 incr_expr_list: incr_expr_list func_invo ',' .

    $default  reduce using rule 164 (incr_expr_list)


State 298

  158 incr_expr: incr_expr_list var_ref '=' . expr ','
  163 incr_expr_list: incr_expr_list var_ref '=' . expr ','

    ID            shift, and go to state 37
    INT_CONST     shift, and go to state 38
    FLOAT_CONST   shift, and go to state 39
    BOOL_CONST    shift, and go to state 40
    STRING_CONST  shift, and go to state 41
    '-'           shift, and go to state 42
    '('           shift, and go to state 43
    '!'           shift, and go to state 44

    value_type    go to state 45
    int_value     go to state 46
    float_value   go to state 47
    bool_value    go to state 48
    string_value  go to state 49
    expr          go to state 303
    func_invo     go to state 51


State 299

  146 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' . $@27 compound

    $default  reduce using rule 145 ($@27)

    $@27  go to state 304


State 300

  144 while_stat: DO $@25 compound $@26 WHILE '(' bool_expr ')' ';' .

    $default  reduce using rule 144 (while_stat)


State 301

  165 incr_expr_list: var_ref '=' expr ',' .

    $default  reduce using rule 165 (incr_expr_list)


State 302

  148 for_stat: FOR '(' init_expr ';' ';' incr_expr ')' $@28 compound .

    $default  reduce using rule 148 (for_stat)


State 303

  109 expr: expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '+' expr
  112     | expr . '-' expr
  113     | expr . '%' expr
  114     | expr . '<' expr
  115     | expr . LE expr
  116     | expr . '>' expr
  117     | expr . GE expr
  118     | expr . EQ expr
  119     | expr . NE expr
  122     | expr . AND expr
  123     | expr . OR expr
  158 incr_expr: incr_expr_list var_ref '=' expr . ','
  163 incr_expr_list: incr_expr_list var_ref '=' expr . ','

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    LE   shift, and go to state 75
    EQ   shift, and go to state 76
    GE   shift, and go to state 77
    NE   shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    ','  shift, and go to state 305


State 304

  146 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' $@27 . compound

    '{'  shift, and go to state 162

    compound  go to state 306


State 305

  158 incr_expr: incr_expr_list var_ref '=' expr ',' .
  163 incr_expr_list: incr_expr_list var_ref '=' expr ',' .

    ID        reduce using rule 163 (incr_expr_list)
    $default  reduce using rule 158 (incr_expr)


State 306

  146 for_stat: FOR '(' init_expr ';' bool_expr ';' incr_expr ')' $@27 compound .

    $default  reduce using rule 146 (for_stat)
